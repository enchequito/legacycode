{"ts":1356088134893,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var App = Ember.Application.create({    \r\n    title: 'Manos de estiba',\r\n    ready: function(){\r\n        // Carreguem els literals abans de pintar la página.\r\n    \tPorticCtx.loadBrowserLanguage();\r\n    } \r\n});\r\n\r\nApp.User = Ember.Object.create({\r\n    user: '',\r\n    pass: ''\r\n})\r\n\r\nApp.ApplicationController = Ember.Controller.extend({\r\n    response: function(data){\r\n        alert(data.token);\r\n    }\r\n});\r\n\r\nApp.ApplicationView = Ember.View.extend({\r\n  templateName: 'application'\r\n});\r\n\r\nApp.AuthView = Ember.View.extend({\r\n    templateName: 'auth-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n        // Activem la validació.\r\n    \t//$(\"#frmAuth\").validate();\r\n    }\r\n});\r\n\r\nApp.AuthController = Ember.Object.create({\r\n\tdoAuthenticate: function(event){\r\n\t\tvar loJSON;\r\n\t\t\r\n\t\ttry{\r\n\t\t\tevent.preventDefault();\r\n\t\t\t           \r\n            App.User.set(\"user\",$(\"#frmAuth input[name=usuari]\").val());\r\n            App.User.set(\"pass\", $(\"#frmAuth input[name=claupub]\").val());\r\n                        \r\n\t\t\t//loJSON = PorticCtx.formToJSON(\"frmAuth\");\r\n\r\n\t\t\t//PorticCtx.sendJSONPost(\"credentials\", loJSON, \"/PorticMockUp/json/rest/autenticate\", App.response);\r\n\t\t\t\r\n\t\t}catch(e){\r\n\t\t\talert(e.message);\r\n\t\t}\r\n\t},\r\n\tdoClean: function(event){\r\n\t\t$(\"#frmAuth\")[0].reset();\r\n\t}\r\n});\r\n\r\n\r\nApp.NavigationView = Ember.View.extend({\r\n    templateName: 'top-nav-bar',\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: Ember.View.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    }) \r\n});\r\n\r\nApp.NavBarItem = Ember.Object.extend({\r\n    displayText: '',\r\n    routePath: '',\r\n    routeName: '',\r\n    url: '#',\r\n    controller: ''\r\n});\r\n\r\nApp.NavigationController = Ember.ArrayController.extend({\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home',\r\n                controller: 'navigationController'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources',\r\n                controller: 'navigationController'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials',\r\n                controller: 'navigationController'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Grid',\r\n                routeName: 'grid',\r\n                routePath: 'root.index.grid',\r\n                controller: 'navigationController'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Auth',\r\n                routeName: 'auth',\r\n                routePath: 'root.index.auth',\r\n                controller: 'navigationController'\r\n            })\r\n        );\r\n    }        \r\n});\r\n\r\nApp.GridController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.GridView = Ember.View.extend({\r\n    templateName: 'grid-view'\r\n});\r\n\r\n\r\nApp.TutorialsController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.TutorialsView = Ember.View.extend({\r\n    templateName: 'tutorials-view'\r\n});\r\n\r\nApp.RescontController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.RescontView = Ember.View.extend({\r\n    templateName: 'rescont-view'\r\n});\r\n\r\nApp.ResNavBarItem = Ember.Object.extend({\r\n    displayText: '',\r\n    routePath: '',\r\n    routeName: '',\r\n    url: '#',\r\n    controller: ''\r\n});\r\n\r\nApp.ResnavbarController = Ember.ArrayController.extend({\r\n    content: [],\r\n    selected: null,\r\n    init: function() {        \r\n        this._super();\r\n        this.pushObject(\r\n            App.ResNavBarItem.create({\r\n                displayText: 'ResourcesOp1 ',\r\n                routeName: 'op1',\r\n                routePath: 'root.resources.op1',\r\n                controller: 'resourcesController'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.ResNavBarItem.create({\r\n                displayText: 'ResourcesOp2 ',\r\n                routeName: 'op2',\r\n                routePath: 'root.resources.op2',\r\n                controller: 'resourcesController'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.ResNavBarItem.create({\r\n                displayText: 'ResourcesOp3 ',\r\n                routeName: 'op3',\r\n                routePath: 'root.resources.op3',\r\n                controller: 'resourcesController'\r\n            })\r\n        );\r\n    }     \r\n});\r\n\r\nApp.ResnavbarView = Ember.View.extend({\r\n    templateName: 'resnavbar',\r\n    selectedBinding: 'controller.selected',\r\n    ResNavBarItemView: Ember.View.extend({\r\n        tagName: 'tr',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    }) \r\n});\r\n\r\n\r\nApp.AppBarItem = Ember.Object.extend({\r\n    displayText: '',\r\n    routePath: '',\r\n    routeName: '',\r\n    url: '#',\r\n    controller: ''\r\n});\r\n\r\nApp.AppbarView  = Ember.View.extend({\r\n    templateName: 'appbar-view',\r\n    selectedBinding: 'controller.selected',\r\n    AppBarItemView: Ember.View.extend({\r\n        tagName: 'tr',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    }) \r\n});\r\n\r\nApp.AppbarController = Ember.ArrayController.extend({\r\n    content: [],\r\n    selected: null,\r\n    init: function() {        \r\n        this._super();\r\n        this.pushObject(\r\n            App.AppBarItem.create({\r\n                displayText: 'Opcion 1 ',\r\n                routeName: 'op1',\r\n                routePath: 'root.tutorials.op1',\r\n                controller: 'appbarController'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.AppBarItem.create({\r\n                displayText: 'Opcion 2 ',\r\n                routeName: 'op2',\r\n                routePath: 'root.tutorials.op2',\r\n                controller: 'appbarController'\r\n            })\r\n        );\r\n    }     \r\n});\r\n\r\nApp.ContentappbarView  = Ember.View.extend({\r\n    templateName: 'contentappbar-view'\r\n});\r\n\r\nApp.ContentappbarController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.ContentView  = Ember.View.extend({\r\n    templateName: 'content-view'\r\n});\r\n\r\nApp.ContentController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.FilterbarView  = Ember.View.extend({\r\n    templateName: 'filterbar-view'\r\n});\r\n\r\nApp.FilterbarController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.AppresView  = Ember.View.extend({\r\n    templateName: 'appres-view'\r\n});\r\n\r\nApp.AppresController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.ResourcesView  = Ember.View.extend({\r\n    templateName: 'resources-view'\r\n});\r\n\r\nApp.ResourcesController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.Rescont2View  = Ember.View.extend({\r\n    templateName: 'rescont2-view'\r\n});\r\n\r\nApp.Rescont2Controller = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nfunction str() {return \"\";}\r\n\r\nApp.Rescont3View  = Ember.View.extend({\r\n    templateName: 'rescont3-view',\r\n    init: function() {       \r\n        if(!this.layout){\r\n            alert(\"hola\");\r\n            $.get('rescont3.js',function(data){this.layout=Ember.Handlebars.compile(data);});\r\n        }\r\n    },         /*\r\n    layout: Ember.Handlebars.compile(\r\n                $.get('rescont3.js',            async: false,\r\n            dataType: \"text\",\r\n            success: function(data){return data;}\r\n        });\r\n    )\r\n    )*/\r\n\r\n    layout: Ember.Handlebars.compile(\"<h3>Opcion2-El usuario es:{{App.User.user}}</h3><h3>y su password:{{App.User.pass}}</h3>\")\r\n    //layout: Ember.Handlebars.compile(\"<div class='my-decorative-class'>{{yield}}</div>\"),\r\n    //template: Ember.Handlebars.compile(\"I got wrapped\")\r\n});\r\n\r\nApp.Rescont3Controller = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.Conttut1View  = Ember.View.extend({\r\n    templateName: 'conttut1-view'\r\n});\r\n\r\nApp.Conttut1Controller = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.Conttut2View  = Ember.View.extend({\r\n    templateName: 'conttut2-view'\r\n});\r\n\r\nApp.Conttut2Controller = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.Router = Ember.Router.extend({\r\n    enableLogging: true,\r\n    location: 'hash',\r\n    root: Ember.Route.extend({\r\n        navigateTo: function (router, context){\r\n            // sets the document title with the route name, but you \r\n            // could have another property that keeps the title here\r\n            $(document).attr('title', context.context.get('routeName'));\r\n            // set the route name on the 'selected' property in the controller\r\n            //router.set('navigationController'.selected', context.context.get('routeName'));\r\n            router.set(context.context.get('controller')+'.selected', context.context.get('routeName'));\r\n            // finaly transitions to the route that's provided by the model\r\n            router.transitionTo(context.context.get('routePath'), context.context);\r\n        },\r\n        navigateToResources: function (router, context) {\r\n            // since this is not called from a nav link which has a\r\n            // model, the selected and the route must be set manually\r\n            router.set('navigationController.selected','resources');\r\n            router.transitionTo('root.index.resources');\r\n        },\r\n        index: Ember.Route.extend({\r\n            route: '/',\r\n            connectOutlets: function(router) {\r\n                router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n            },\r\n            home: Ember.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('applicationController').connectOutlet('home');\r\n                }\r\n            }),\r\n            resources: Ember.Route.extend({\r\n                route: '/resources',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('resources');\r\n                    router.get('resourcesController').connectOutlet('resnavbar','resnavbar');\r\n                    router.get('resourcesController').connectOutlet('rescont');\r\n                }\r\n            }),\r\n            tutorials: Ember.Route.extend({\r\n                route: '/tutorials',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('tutorials');\r\n                    router.get('tutorialsController').connectOutlet('tutnavbar','appbar');\r\n                    router.get('tutorialsController').connectOutlet('conttut1');\r\n                }\r\n            }),\r\n            grid: Ember.Route.extend({\r\n                route: '/grid',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('grid');\r\n                }\r\n            }),\r\n            auth: Ember.Route.extend({\r\n                route: '/auth',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('auth');\r\n                }\r\n            })\r\n        }),        \r\n        resources: Ember.Route.extend({\r\n            route: '/resources',\r\n            connectOutlets: function (router, context) {\r\n                router.get('applicationController').connectOutlet('resources');\r\n            },\r\n            index: Ember.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('applicationController').connectOutlet('resources');\r\n                }\r\n            }),\r\n            op1: Ember.Route.extend({\r\n                route: '/op1',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('resourcesController').connectOutlet('resnavbar','resnavbar');\r\n                     router.get('resourcesController').connectOutlet('rescont2');\r\n                }\r\n            }),\r\n            op2: Ember.Route.extend({\r\n                route: '/op2',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('resourcesController').connectOutlet('resnavbar','resnavbar');\r\n                     router.get('resourcesController').connectOutlet('rescont3');\r\n                }\r\n            }),\r\n            op3: Ember.Route.extend({\r\n                route: '/op3',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('resourcesController').connectOutlet('resnavbar','resnavbar');\r\n                     router.get('resourcesController').connectOutlet('rescont4');\r\n                }\r\n            })\r\n        }),\r\n        tutorials: Ember.Route.extend({\r\n            route: '/tutorials',\r\n            connectOutlets: function (router, context) {\r\n                router.get('applicationController').connectOutlet('tutorials');\r\n            },\r\n            index: Ember.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('applicationController').connectOutlet('tutorials');\r\n                }\r\n            }),\r\n            op1: Ember.Route.extend({\r\n                route: '/op1',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('tutorialsController').connectOutlet('tutnavbar','appbar');\r\n                    router.get('tutorialsController').connectOutlet('conttut1');\r\n                }\r\n            }),\r\n            op2: Ember.Route.extend({\r\n                route: '/op2',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('tutorialsController').connectOutlet('tutnavbar','appbar');\r\n                    router.get('tutorialsController').connectOutlet('conttut2');\r\n                }\r\n            })\r\n        })   \r\n    })\r\n})\r\n\r\nApp.initialize();"]],"start1":0,"start2":0,"length1":0,"length2":14670}]],"length":14670}
