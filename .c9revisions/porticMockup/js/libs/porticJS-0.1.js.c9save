{"ts":1356171337656,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function(){\r\n\r\n\t/**\r\n\t *@class PorticCtx\r\n\t */\r\n\t// Si existeix, recuperem el context global de portic (1 context per navegador).\r\n\tif('undefined' === typeof window.top.PorticCtx){\r\n\t\tPorticCtx = {};\r\n\t}else{\r\n\t\tPorticCtx = window.top.PorticCtx;\r\n\t}\r\n\t\r\n\tif ('undefined' !== typeof window) {\r\n\t    window.pCtx = window.PorticCtx = pCtx = PorticCtx;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * 'Singleton' una �nica sessi� per context.\r\n\t */\r\n    function Session(){\r\n    \tthis.tokenSessio = \"\";\r\n    \tthis.usuariSessio = \"\";\r\n    \tthis.paisSessio = \"\";\r\n    \tthis.nifSessio = \"\";\r\n    \tthis.idioma = \"\";\r\n    \tthis.ready = function(){return this.tokenSessio!=\"\";};\r\n     };\r\n     var session = new Session();\r\n\r\n     function GenericForm(){\r\n    \t this.pagina = \"-1\";\r\n    \t this.totalElements = \"\";\r\n    \t this.elementsPagina = \"\";\r\n    \t this.params = \"\";\r\n     };\r\n     GenericForm.prototype = new Session();\r\n    \t\r\n\t/**\r\n\t * Declaraci� de les constants de configuraci�.\r\n\t */\r\n\tvar CONFIG = (function(){\r\n\t\tvar values = {\r\n\t\t   // Resoluci� de fitxers de literals.\r\n\t\t   'LANGUAGE_BASEPATH': '/PorticMockUp/js/resources/',\r\n\t\t   'LANGUAGE_FILE': 'language_%LANG%.properties',\r\n\t\t   'LANGUAGE_DEFAULT': 'language_en.properties',\r\n\t\t   'LANGUAGE_TOKEN': '%LANG%'\r\n\t\t};\r\n\t    \r\n\t\treturn{\r\n\t\t\tget: function(key) {return values[key];}\r\n\t\t};\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Retorna l'objecte sessi� carregat en el context.\r\n\t * @returns {Session}\r\n\t */\r\n\tPorticCtx.getSession = function(){return session;};\r\n\t\t\r\n\t/**\r\n\t * C�rrega els literals a partir del el fitxer per defecte.\r\n\t * @method loadLiterals\r\n\t */\r\n\tPorticCtx.loadBrowserLanguage = function(){\r\n\t\tPorticCtx.loadLanguage(navigator.language);\r\n\t};\r\n\t\r\n\t/**\r\n\t * C�rrega dels literals a partir del idioma indicat per par�metre.\r\n\t * Si no s'indica l'idioma, es carrega el fitxer per defecte.\r\n\t * @method loadLiterals\r\n\t */\r\n\tPorticCtx.loadLanguage = function(psLang){\r\n\t\tvar loResourceToLoad = CONFIG.get('LANGUAGE_BASEPATH');\r\n\t\t\r\n\t\tif('undefined' === typeof psLang){\r\n\t\t\tloResourceToLoad += CONFIG.get('LANGUAGE_DEFAULT');\r\n\t\t}else{\r\n\t\t\tloResourceToLoad += CONFIG.get('LANGUAGE_FILE').replaceAll(CONFIG.get('LANGUAGE_TOKEN'), psLang);\r\n\t\t}\r\n\t\t\r\n\t\tthis.sendAjaxPost(\"\", \r\n\t\t\t\t\t\t  loResourceToLoad, \r\n\t\t\t\t\t\t  function(data, textStatus, jqXHR){Ember.I18n.translations = $.parseJSON(data);}, \r\n\t\t\t\t\t\t  ajaxErrorHandler, \r\n\t\t\t\t\t\t  \"text\");\r\n\t};\r\n\t\r\n\t/**\r\n\t * Recorre tots els elements del formulari indicat, buscant quins corresponen a camps d'entrada i \r\n\t * genera la corresponent cadena JSON. T� en compte possibles arrays d'elements amb el mateix nom.\r\n\t * @param formId valor del camp 'id' del formulari.\r\n\t * @returns cadena JSON.\r\n\t */\r\n\tPorticCtx.formToJSON = function(formId){\r\n\t    var loResult = {};\r\n\t    var loInputs = $(\"#\"+formId).serializeArray();\r\n\t    \r\n\t    $.each(loInputs, function(){\r\n\t    \t\r\n\t        if (loResult[this.name] === undefined) {\r\n\t        \tloResult[this.name] = (this.value || '');\r\n\t        }else{\r\n\t            if (!loResult[this.name].push) {\r\n\t            \tloResult[this.name] = [loResult[this.name]];\r\n\t            }\r\n\t            loResult[this.name].push(this.value || '');\t        \t\r\n\t        }\r\n\t    });\r\n\t    \r\n\t    return JSON.stringify(loResult);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Env�a una petici� al servidor on les dades s'intercanviaran en format JSON tant de pujada com de baixada.\r\n\t * @param jsonType nom complert de la classe de servidor a la que corresp�n l'objecte JSON enviat. Opcional,\r\n\t * si no s'indica, el servidor mapeja les dades JSON contra una col�lecci� de HashMaps.\r\n\t * @param jsonData dades a enviar en format JSON.\r\n\t * @param url URL on realitzar la petici�.\r\n\t * @param callback funci� a invocar en cas que la petici� finalitzi correctament.\r\n\t * @param errorCallBack funci� a invocar en cas que la petici� no finalitzi correctament. Opcional, si no \r\n\t * s'indica, s'utilitza el gestor d'errors per defecte.\r\n\t */\r\n\tPorticCtx.sendJSONPost = function(jsonType, jsonData, url, callback, errorCallBack){\r\n\t\ttry{\r\n\t\t\tvar data = {jsonType : jsonType, jsonData : jsonData};\r\n\t\t\t\r\n\t\t\tthis.sendAjaxPost(data, url, callback, errorCallBack, \"json\");\r\n\r\n\t\t}catch(e){\r\n\t\t\talert(e.message);\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Env�a una petici� AJAX al servidor.\r\n\t * @param dataToSend dades a enviar.\r\n\t * @param url URL on realitzar la petici�.\r\n\t * @param callback funci� a invocar en cas que la petici� finalitzi correctament.\r\n\t * @param errorCallBack funci� a invocar en cas que la petici� no finalitzi correctament. Opcional, si no \r\n\t * s'indica, s'utilitza el gestor d'errors per defecte.\r\n\t * @param returnDataType tipus de dades del retorn: text, xml, json, script, html... Opcional, per defecte\r\n\t * 'text' i l'aplicaci� gestiona el tipus de dades. \r\n\t */\r\n\tPorticCtx.sendAjaxPost = function(dataToSend, url, callback, errorCallBack, returnDataType){\r\n\t\ttry{\r\n\t\t\tvar loErrorCallback = ajaxErrorHandler;\r\n\t\t\tvar lsReturnType = \"text\";\r\n\t\t\t\r\n\t\t\tif('undefined' !== typeof errorCallBack){\r\n\t\t\t\tloErrorCallback = errorCallBack;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif('undefined' !== typeof returnDataType){\r\n\t\t\t\tlsReturnType = returnDataType;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t    url: url,\r\n\t\t\t    dataType: lsReturnType,\r\n\t\t\t    async: false,\r\n\t\t\t    data:  dataToSend,\r\n\t\t\t    success: callback,\r\n\t\t\t    error: loErrorCallback\r\n\t\t\t});\r\n\t\t}catch(e){\r\n\t\t\talert(e.message);\r\n\t\t}\r\n\t};\r\n\t\r\n\tPorticCtx.getLiteral = function(key){\r\n\t\treturn $.format(Ember.I18n.translations[key]);\r\n\t};\r\n\t\r\n\tPorticCtx.showError = function(){\r\n\t\t$(\"#errorDialog\").show(\"clip\", {}, 1000);\r\n\t};\r\n\t\r\n\tajaxErrorHandler = function(data, textStatus, jqXHR){\r\n        alert('Error, error, eee-rror !!!!');\r\n    };\r\n})();\r\n\r\n\r\n\r\n/**\r\n * Afegim al tipus String la funci� 'replaceAll'.\r\n **/\r\nString.prototype.replaceAll = function(str1, str2){return this.split(str1).join(str2);};\r\n\r\n/**\r\n * Recupera l'adre�a base per a crides http a l'aplicaci�.\r\n * Parteix de la suposi� que les URLs tenen la forma 'http://servername:port/appName/[......]\r\n * @returns {String}\r\n */\r\ngetApplicationPath = function(){\r\n   var href = window.location.href.split('/');\r\n   return href[2];\r\n};"]],"start1":0,"start2":0,"length1":0,"length2":6106}]],"length":6106}
{"contributors":[],"silentsave":false,"ts":1356171548746,"patch":[[{"diffs":[[0,"': '"],[-1,"/PorticMockUp/"],[0,"js/r"]],"start1":1072,"start2":1072,"length1":22,"length2":8}]],"length":6092,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356172362335,"patch":[[{"diffs":[[0,"\t}\r\n\t\t\r\n"],[-1,"\t\t"],[1,"        $.ajax({\r\n    \t    url: loResourceToLoad,\r\n\t\t    async: false,\r\n\t\t    dataType: \"text\",\r\n\t\t    success: function(data, textStatus, jqXHR){Ember.I18n.translations = $.parseJSON(data);},\r\n\t\t    error: ajaxErrorHandler\r\n\t\t});\r\n        \r\n\t\t/*"],[0,"this.sen"]],"start1":2153,"start2":2153,"length1":18,"length2":262},{"diffs":[[0,"rHandler, \r\n"],[-1,""],[0,"\t\t\t\t\t\t  \"tex"]],"start1":2566,"start2":2566,"length1":24,"length2":24},{"diffs":[[0,"\"text\");"],[1,"*/"],[0,"\r\n\t};\r\n\t"]],"start1":2586,"start2":2586,"length1":16,"length2":18}]],"length":6338,"saved":false}
{"ts":1356172418642,"patch":[[{"diffs":[[0,"      \r\n"],[1,"        //* Parece que esto no le gusta a mi proyecto\r\n"],[0,"\t\t/*this"]],"start1":2395,"start2":2395,"length1":16,"length2":71}]],"length":6393,"saved":false}
