{"ts":1356738242280,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356738470230,"patch":[[{"diffs":[[1,"\r\nApp.FiltrosBusquedaController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.FiltrosBusquedaView = Ember.View.extend({\r\n    templateName: 'filtrosbusqueda-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n    }\r\n});\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":285}]],"length":285,"saved":false}
{"ts":1356738544915,"patch":[[{"diffs":[[0,"\r\n    }\r\n});\r\n\r\n"],[1,"\r\nApp.gestionExpsController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.gestionExpsView = Ember.View.extend({\r\n    templateName: 'gestionexps-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n        $( \"#menu\" ).buttonset();\r\n        //$(\"#menuGestExps\").menu();\r\n    }\r\n});\r\n"]],"start1":269,"start2":269,"length1":16,"length2":362}]],"length":631,"saved":false}
{"ts":1356738577197,"patch":[[{"diffs":[[0,"enu();\r\n    }\r\n});\r\n"],[1,"App.llistaExpsView = Ember.View.extend({\r\n    templateName: 'llistaexps-view',\r\n    didInsertElement:function(){\r\n        \r\n\t   \t$(\"#gridExp\").jqGrid({ \r\n\t\t\t\tdatatype: \"jsonstring\",\r\n\t\t\t\tjsonReader: {\r\n\t\t\t\t    repeatitems: false,\r\n//\t\t\t\t    id: \"expediente\",\r\n\t\t\t\t    root: \"llista\"\r\n\t\t\t\t},\r\n\t    \t\tcolNames:['Circuit','Seguiment', 'Expedient', 'Consignatari','Client','BL/Booking','Vaixell', 'L/S', 'ETA/ETD', 'Despeses', 'Condicions de transport', 'Estat', 'Data Ult. Modif.', 'Usuari'],\r\n\t    \t\tcolModel:[ \r\n\t    \t\t\t\t\t{name: 'circuito', index:'circuito', width : 40, sortable : true, sorttype: 'text', align: 'center'},\r\n\t    \t\t\t\t\t{name: 'seguimento', width : 180, sortable : true, align: 'left'},\r\n\t    \t\t\t\t\t{name: 'expediente', width : 120, sortable : true, align: 'left'},\r\n\t    \t\t\t\t\t{name: 'consignatario', width : 130, sortable : true, align: 'left', hide: true},\r\n\t    \t\t\t\t\t{name: 'cliente', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'bl', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'barco', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'l_s', width : 80, sortable : true, align: 'right', formatter:formatLS},\r\n\t    \t\t\t\t\t{name: 'eta_etd', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'gastos', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'condiciones', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'estado', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'fechaMod', index:'fechaMod', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n\t    \t\t\t\t\t{name: 'usuario', width : 80, sortable : true, align: 'right'}    \t\t           \r\n\t    \t\t         ], \r\n\t             sortname: \"data_ult_mod\", \r\n\t             viewrecords: true, \r\n\t             sortorder: \"asc\", \r\n\t             loadonce: false, \t\t// per activar/desactivar la recàrrega de dades.\r\n\t             sortable: true, \t\t// activar o desactivar el 'drag & drop' de columnes (requereix el mòdul de jQuery).\r\n\t             multiselect: false,\t// true --> multisel·lecció, i apareix un checkbox com a primera columna.\r\n\t             autowidth: true,\r\n\t             rowNum: 6,\r\n\t             rowList:[6,12,18],\r\n\t             pager: \"#llistaExpButtons\"\r\n\t             /*onSelectRow: function(ids) {\r\n\t            \t pCtx.populateDataGridJSON (\"gridTrackTrace\", \"/PorticMockUp/json/rest/trackTrace\");\r\n\r\n\t             }*/\r\n\t    \t});\r\n\t   \t\r\n\t   \t\t//pCtx.populateDataGridJSON (\"gridExp\", \"/PorticMockUp/json/rest/listExp\");\r\n    }\r\n});\r\n\r\nApp.llistaTrackTraceController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.llistaTrackTraceView = Ember.View.extend({\r\n    templateName: 'llistatracktrace-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n\t   \t$(\"#gridTrackTrace\").jqGrid({ \r\n\t\t\tdatatype: \"jsonstring\",\r\n\t\t\tjsonReader: {\r\n\t\t\t    repeatitems: false,\r\n//\t\t\t    id: \"contenedorMat\",\r\n\t\t\t    root: \"llista\"\r\n\t\t\t},\r\n    \t\tcolNames:['CB','Matrícula Cont.', 'Tipo', 'Ref. Contenedor','Precinto','Mercancias Peligrosas','Empresa Transporte', 'Documentación Recibida', 'Transporte', 'Preaviso', 'Salida Depot', 'Entrada Terminal', 'Solícito', 'Posicionamiento', 'Despacho', 'Levante sin papeles', 'Carga', 'Seguimiento'],\r\n    \t\tcolModel:[ \r\n    \t\t\t\t\t{name: 'c_b', index: 'c_b', width : 40, sortable : true, sorttype: 'text', align: 'center'},\r\n    \t\t\t\t\t{name: 'contenedorMat', index: 'contenedorMat', width : 180, sortable : true, align: 'left'},\r\n    \t\t\t\t\t{name: 'tipo', index: 'tipo', width : 120, sortable : true, align: 'left'},\r\n    \t\t\t\t\t{name: 'contenedorRef', width : 130, sortable : true, align: 'left', hide: true},\r\n    \t\t\t\t\t{name: 'precinto', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'mercPelig', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'empTrans', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'docRecibida', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'transporte', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'preaviso', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'depotSalida', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'terminalEnt', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'solicito', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n    \t\t\t\t\t{name: 'posicionamiento', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'despacho', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n    \t\t\t\t\t{name: 'levSinPapeles', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'carga', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'seguimiento', width : 80, sortable : true, sorttype: 'text', align: 'right'}\r\n    \t\t         ], \r\n             sortname: \"contenedorMat\", \r\n             viewrecords: true, \r\n             sortorder: \"asc\", \r\n             loadonce: false, \t\t// per activar/desactivar la recàrrega de dades.\r\n             sortable: true, \t\t// activar o desactivar el 'drag & drop' de columnes (requereix el mòdul de jQuery).\r\n             multiselect: false,\t// true --> multisel·lecció, i apareix un checkbox com a primera columna.\r\n             autowidth: true\r\n    \t});\r\n    }\r\n});\r\n\r\n"]],"start1":611,"start2":611,"length1":20,"length2":5335}]],"length":5946,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356774051359,"patch":[[{"diffs":[[-1,"\r\nApp.FiltrosBusquedaController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.FiltrosBusquedaView = Ember.View.extend({\r\n    templateName: 'filtrosbusqueda-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n    }\r\n});\r\n\r\n\r\nApp.gestionExpsController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.gestionExpsView = Ember.View.extend({\r\n    templateName: 'gestionexps-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n        $( \"#menu\" ).buttonset();\r\n        //$(\"#menuGestExps\").menu();\r\n    }\r\n});\r\nApp.llistaExpsView = Ember.View.extend({\r\n    templateName: 'llistaexps-view',\r\n    didInsertElement:function(){\r\n        \r\n\t   \t$(\"#gridExp\").jqGrid({ \r\n\t\t\t\tdatatype: \"jsonstring\",\r\n\t\t\t\tjsonReader: {\r\n\t\t\t\t    repeatitems: false,\r\n//\t\t\t\t    id: \"expediente\",\r\n\t\t\t\t    root: \"llista\"\r\n\t\t\t\t},\r\n\t    \t\tcolNames:['Circuit','Seguiment', 'Expedient', 'Consignatari','Client','BL/Booking','Vaixell', 'L/S', 'ETA/ETD', 'Despeses', 'Condicions de transport', 'Estat', 'Data Ult. Modif.', 'Usuari'],\r\n\t    \t\tcolModel:[ \r\n\t    \t\t\t\t\t{name: 'circuito', index:'circuito', width : 40, sortable : true, sorttype: 'text', align: 'center'},\r\n\t    \t\t\t\t\t{name: 'seguimento', width : 180, sortable : true, align: 'left'},\r\n\t    \t\t\t\t\t{name: 'expediente', width : 120, sortable : true, align: 'left'},\r\n\t    \t\t\t\t\t{name: 'consignatario', width : 130, sortable : true, align: 'left', hide: true},\r\n\t    \t\t\t\t\t{name: 'cliente', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'bl', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'barco', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'l_s', width : 80, sortable : true, align: 'right', formatter:formatLS},\r\n\t    \t\t\t\t\t{name: 'eta_etd', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'gastos', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'condiciones', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'estado', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'fechaMod', index:'fechaMod', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n\t    \t\t\t\t\t{name: 'usuario', width : 80, sortable : true, align: 'right'}    \t\t           \r\n\t    \t\t         ], \r\n\t             sortname: \"data_ult_mod\", \r\n\t             viewrecords: true, \r\n\t             sortorder: \"asc\", \r\n\t             loadonce: false, \t\t// per activar/desactivar la recàrrega de dades.\r\n\t             sortable: true, \t\t// activar o desactivar el 'drag & drop' de columnes (requereix el mòdul de jQuery).\r\n\t             multiselect: false,\t// true --> multisel·lecció, i apareix un checkbox com a primera columna.\r\n\t             autowidth: true,\r\n\t             rowNum: 6,\r\n\t             rowList:[6,12,18],\r\n\t             pager: \"#llistaExpButtons\"\r\n\t             /*onSelectRow: function(ids) {\r\n\t            \t pCtx.populateDataGridJSON (\"gridTrackTrace\", \"/PorticMockUp/json/rest/trackTrace\");\r\n\r\n\t             }*/\r\n\t    \t});\r\n\t   \t\r\n\t   \t\t//pCtx.populateDataGridJSON (\"gridExp\", \"/PorticMockUp/json/rest/listExp\");\r\n    }\r\n});\r\n\r\nApp.llistaTrackTraceController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.llistaTrackTraceView = Ember.View.extend({\r\n    templateName: 'llistatracktrace-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n\t   \t$(\"#gridTrackTrace\").jqGrid({ \r\n\t\t\tdatatype: \"jsonstring\",\r\n\t\t\tjsonReader: {\r\n\t\t\t    repeatitems: false,\r\n//\t\t\t    id: \"contenedorMat\",\r\n\t\t\t    root: \"llista\"\r\n\t\t\t},\r\n    \t\tcolNames:['CB','Matrícula Cont.', 'Tipo', 'Ref. Contenedor','Precinto','Mercancias Peligrosas','Empresa Transporte', 'Documentación Recibida', 'Transporte', 'Preaviso', 'Salida Depot', 'Entrada Terminal', 'Solícito', 'Posicionamiento', 'Despacho', 'Levante sin papeles', 'Carga', 'Seguimiento'],\r\n    \t\tcolModel:[ \r\n    \t\t\t\t\t{name: 'c_b', index: 'c_b', width : 40, sortable : true, sorttype: 'text', align: 'center'},\r\n    \t\t\t\t\t{name: 'contenedorMat', index: 'contenedorMat', width : 180, sortable : true, align: 'left'},\r\n    \t\t\t\t\t{name: 'tipo', index: 'tipo', width : 120, sortable : true, align: 'left'},\r\n    \t\t\t\t\t{name: 'contenedorRef', width : 130, sortable : true, align: 'left', hide: true},\r\n    \t\t\t\t\t{name: 'precinto', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'mercPelig', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'empTrans', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'docRecibida', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'transporte', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'preaviso', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'depotSalida', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'terminalEnt', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'solicito', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n    \t\t\t\t\t{name: 'posicionamiento', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'despacho', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n    \t\t\t\t\t{name: 'levSinPapeles', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'carga', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'seguimiento', width : 80, sortable : true, sorttype: 'text', align: 'right'}\r\n    \t\t         ], \r\n             sortname: \"contenedorMat\", \r\n             viewrecords: true, \r\n             sortorder: \"asc\", \r\n             loadonce: false, \t\t// per activar/desactivar la recàrrega de dades.\r\n             sortable: true, \t\t// activar o desactivar el 'drag & drop' de columnes (requereix el mòdul de jQuery).\r\n             multiselect: false,\t// true --> multisel·lecció, i apareix un checkbox com a primera columna.\r\n             autowidth: true\r\n    \t});\r\n    }\r\n});\r\n\r\n"]],"start1":0,"start2":0,"length1":5946,"length2":0}]],"length":0,"saved":false}
{"ts":1356774234526,"patch":[[{"diffs":[[1,"\r\nApp.FiltrosBusquedaController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.FiltrosBusquedaView = Ember.View.extend({\r\n    templateName: 'filtrosbusqueda-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n    }\r\n});\r\n\r\n\r\nApp.gestionExpsController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.gestionExpsView = Ember.View.extend({\r\n    templateName: 'gestionexps-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n        $( \"#menu\" ).buttonset();\r\n        //$(\"#menuGestExps\").menu();\r\n    }\r\n});\r\nApp.llistaExpsView = Ember.View.extend({\r\n    templateName: 'llistaexps-view',\r\n    didInsertElement:function(){\r\n        \r\n           $(\"#gridExp\").jqGrid({ \r\n\t\t\t\tdatatype: \"jsonstring\",\r\n\t\t\t\tjsonReader: {\r\n\t\t\t\t    repeatitems: false,\r\n//\t\t\t\t    id: \"expediente\",\r\n\t\t\t\t    root: \"llista\"\r\n\t\t\t\t},\r\n\t    \t\tcolNames:['Circuit','Seguiment', 'Expedient', 'Consignatari','Client','BL/Booking','Vaixell', 'L/S', 'ETA/ETD', 'Despeses', 'Condicions de transport', 'Estat', 'Data Ult. Modif.', 'Usuari'],\r\n\t    \t\tcolModel:[ \r\n\t    \t\t\t\t\t{name: 'circuito', index:'circuito', width : 40, sortable : true, sorttype: 'text', align: 'center'},\r\n\t    \t\t\t\t\t{name: 'seguimento', width : 180, sortable : true, align: 'left'},\r\n\t    \t\t\t\t\t{name: 'expediente', width : 120, sortable : true, align: 'left'},\r\n\t    \t\t\t\t\t{name: 'consignatario', width : 130, sortable : true, align: 'left', hide: true},\r\n\t    \t\t\t\t\t{name: 'cliente', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'bl', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'barco', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'l_s', width : 80, sortable : true, align: 'right', formatter:formatLS},\r\n\t    \t\t\t\t\t{name: 'eta_etd', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'gastos', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'condiciones', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'estado', width : 80, sortable : true, align: 'right'},\r\n\t    \t\t\t\t\t{name: 'fechaMod', index:'fechaMod', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n\t    \t\t\t\t\t{name: 'usuario', width : 80, sortable : true, align: 'right'}    \t\t           \r\n\t    \t\t         ], \r\n\t             sortname: \"data_ult_mod\", \r\n\t             viewrecords: true, \r\n\t             sortorder: \"asc\", \r\n\t             loadonce: false, \t\t// per activar/desactivar la recàrrega de dades.\r\n\t             sortable: true, \t\t// activar o desactivar el 'drag & drop' de columnes (requereix el mòdul de jQuery).\r\n\t             multiselect: false,\t// true --> multisel·lecció, i apareix un checkbox com a primera columna.\r\n\t             autowidth: true,\r\n\t             rowNum: 6,\r\n\t             rowList:[6,12,18],\r\n\t             pager: \"#llistaExpButtons\"\r\n\t             /*onSelectRow: function(ids) {\r\n\t            \t pCtx.populateDataGridJSON (\"gridTrackTrace\", \"/PorticMockUp/json/rest/trackTrace\");\r\n\r\n\t             }*/\r\n\t    \t});\r\n\t   \t\r\n\t   \t\t//pCtx.populateDataGridJSON (\"gridExp\", \"/PorticMockUp/json/rest/listExp\");\r\n    }\r\n});\r\n\r\nApp.llistaTrackTraceController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.llistaTrackTraceView = Ember.View.extend({\r\n    templateName: 'llistatracktrace-view',\r\n    // Aquí posarem tot el codi a executar un cop resolta la vista.\r\n    didInsertElement:function(){\r\n\t   \t$(\"#gridTrackTrace\").jqGrid({ \r\n\t\t\tdatatype: \"jsonstring\",\r\n\t\t\tjsonReader: {\r\n\t\t\t    repeatitems: false,\r\n//\t\t\t    id: \"contenedorMat\",\r\n\t\t\t    root: \"llista\"\r\n\t\t\t},\r\n    \t\tcolNames:['CB','Matrícula Cont.', 'Tipo', 'Ref. Contenedor','Precinto','Mercancias Peligrosas','Empresa Transporte', 'Documentación Recibida', 'Transporte', 'Preaviso', 'Salida Depot', 'Entrada Terminal', 'Solícito', 'Posicionamiento', 'Despacho', 'Levante sin papeles', 'Carga', 'Seguimiento'],\r\n    \t\tcolModel:[ \r\n    \t\t\t\t\t{name: 'c_b', index: 'c_b', width : 40, sortable : true, sorttype: 'text', align: 'center'},\r\n    \t\t\t\t\t{name: 'contenedorMat', index: 'contenedorMat', width : 180, sortable : true, align: 'left'},\r\n    \t\t\t\t\t{name: 'tipo', index: 'tipo', width : 120, sortable : true, align: 'left'},\r\n    \t\t\t\t\t{name: 'contenedorRef', width : 130, sortable : true, align: 'left', hide: true},\r\n    \t\t\t\t\t{name: 'precinto', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'mercPelig', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'empTrans', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'docRecibida', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'transporte', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'preaviso', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'depotSalida', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'terminalEnt', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'solicito', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n    \t\t\t\t\t{name: 'posicionamiento', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'despacho', width : 80, sortable : true, sorttype: 'text', align: 'right'},\r\n    \t\t\t\t\t{name: 'levSinPapeles', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'carga', width : 80, sortable : true, align: 'right'},\r\n    \t\t\t\t\t{name: 'seguimiento', width : 80, sortable : true, sorttype: 'text', align: 'right'}\r\n    \t\t         ], \r\n             sortname: \"contenedorMat\", \r\n             viewrecords: true, \r\n             sortorder: \"asc\", \r\n             loadonce: false, \t\t// per activar/desactivar la recàrrega de dades.\r\n             sortable: true, \t\t// activar o desactivar el 'drag & drop' de columnes (requereix el mòdul de jQuery).\r\n             multiselect: false,\t// true --> multisel·lecció, i apareix un checkbox com a primera columna.\r\n             autowidth: true\r\n    \t});\r\n    }\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":5950}]],"length":5950,"saved":false}
