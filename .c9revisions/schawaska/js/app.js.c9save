{"ts":1354649918328,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1354650118993,"patch":[[{"diffs":[[1,"App = null;\r\n\r\nvar BaseController = null;\r\nvar BaseArrayController = null;\r\nvar BaseView = null;\r\nvar FadeInView = null;\r\n\r\nvar initialize = function() {\r\n    BaseController = Em.Controller.extend();\r\n    BaseView = Em.View.extend();\r\n    FadeInView = BaseView.extend({\r\n        didInsertElement: function() {\r\n            this.$().hide().fadeIn('slow');\r\n        }\r\n    });\r\n    BaseArrayController = Em.ArrayController.extend();\r\n};\r\n\r\n\r\n$(function() {\r\n\r\n    initialize();\r\n    \r\n    App = Em.Application.create();\r\n    \r\n    App.ApplicationController = BaseController.extend();\r\n    \r\n    App.NavBarItem = Em.Object.extend({\r\n        displayText: '',\r\n        routePath: '',\r\n        routeName: '',\r\n        url: '#'\r\n    });\r\n\r\n    App.NavigationController = BaseArrayController.extend({\r\n        content: [],\r\n        selected: null,\r\n        init: function() {\r\n            \r\n            this._super();\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Home',\r\n                    routeName: 'home',\r\n                    routePath: 'root.index.home'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Links/Resources',\r\n                    routeName: 'resources',\r\n                    routePath: 'root.index.resources'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Ember Tutorials',\r\n                    routeName: 'tutorials',\r\n                    routePath: 'root.index.tutorials'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Contact',\r\n                    routeName: 'contact',\r\n                    routePath: 'root.index.contact'\r\n                })\r\n            );\r\n        }        \r\n    });\r\n    \r\n    App.HomeController = BaseArrayController.extend({\r\n    \r\n    });\r\n    \r\n    \r\n    App.Resource = Em.Object.extend({\r\n        htmlText: function() {\r\n            return new Handlebars.SafeString(this.get('text'));\r\n        }.property('text'),\r\n        text: '',\r\n        url: '', \r\n        target: '_blank',\r\n        description: '',\r\n        category: ''\r\n    });\r\n    \r\n    App.ResourcesController = BaseArrayController.extend({\r\n        content: [],\r\n        categories: ['All', 'Handlebars', 'Ember', 'Ember Data', 'Bootstrap', 'Other'],\r\n        categorySelected: 'All',\r\n        filtered: function() {\r\n            if(this.get('categorySelected') == \"All\") {\r\n                return this.get('content');                                        \r\n            } else {\r\n                return this.get(\"content\")\r\n                           .filterProperty(\r\n                               \"category\",\r\n                               this.get('categorySelected')\r\n                           );\r\n            }            \r\n        }.property('content.@each', 'categorySelected'),\r\n        filteredCount: function() {\r\n            return this.get('filtered').length;                                        \r\n        }.property('content.@each', 'categorySelected'),\r\n        hasItems: function() {\r\n            return this.get('filtered').length > 0;\r\n        }.property('filteredCount'), \r\n        init: function() {\r\n            this._super();\r\n\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'StackOverflow with <em>ember.js</em> tag',\r\n                    url: 'http://stackoverflow.com/questions/tagged/ember.js?sort=votes',\r\n                    description: 'Takes you to a list of general questions/answers about Ember.js',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'StackOverflow with <em>ember-data</em> tag',\r\n                    url: 'http://stackoverflow.com/questions/tagged/ember-data?sort=votes',\r\n                    description: 'Takes you to a list of questions/answers about Ember Data',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Getting Started With EmberJS',\r\n                    url: 'http://andymatthews.net/read/2012/03/07/Getting-Started-With-EmberJS',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Flame on! A beginner\\'s guide to Ember.js',\r\n                    url: 'http://www.adobe.com/devnet/html5/articles/flame-on-a-beginners-guide-to-emberjs.html',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews touching several beginner subjects',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Video: Tom Dale speaking on PragueJS',\r\n                    url: 'http://www.youtube.com/watch?v=djhAsWGOImk',\r\n                    description: 'Video: Tom Dale speaking on PragueJS',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'JavaScript Templating with Handlebars',\r\n                    url: 'http://javascriptplayground.com/blog/2012/05/javascript-templating-handlebars-tutorial',\r\n                    description: 'JavaScript Templating with Handlebars',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Ember/Handlebars template precompilation with Play',\r\n                    url: 'http://eng.netwallet.com/2012/04/25/emberhandlebars-template-precompilation-with-play/',\r\n                    description: 'Ember/Handlebars template precompilation with Play',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Game On: Backbone and Ember',\r\n                    url: 'http://net.tutsplus.com/tutorials/javascript-ajax/game-on-backbone-and-ember/',\r\n                    description: 'Game On: Backbone and Ember',\r\n                    category: 'Other'\r\n                })    \r\n            );\r\nthis.pushObject(\r\n                App.Resource.create({\r\n                    text: 'List of running Ember-Bootstrap controls and code',\r\n                    url: 'http://jzajpt.github.com/ember-bootstrap/',\r\n                    description: 'List of running Ember-Bootstrap controls and code',\r\n                    category: 'Bootstrap'\r\n                })    \r\n            );\r\n\r\n        }\r\n    });    \r\n    \r\n    App.ContactController = BaseArrayController.extend({\r\n    \r\n    });\r\n\r\n    App.ApplicationView = BaseView.extend({ \r\n        templateName: 'app-view' \r\n    });\r\n\r\n    App.TutorialsController = BaseArrayController.extend({\r\n        \r\n    });\r\n\r\n    App.TutorialsView = FadeInView.extend({\r\n        templateName: 'tutorials-view'\r\n    });\r\n\r\n    App.NavigationView = BaseView.extend({\r\n        templateName: 'top-nav-bar',\r\n        selectedBinding: 'controller.selected',\r\n        NavigationItemView: BaseView.extend({\r\n            tagName: 'li',\r\n            classNameBindings: 'isActive:active'.w(),\r\n            isActive: function() {\r\n                return this.get('menu') === this.get('parentView.selected');\r\n            }.property('item', 'parentView.selected').cacheable(),\r\n        })\r\n    });\r\n    \r\n    App.HomeView = FadeInView.extend({\r\n        templateName: 'home-view',\r\n        watchVideo: function(e) {\r\n            Bootstrap.ModalPane.popup({\r\n                heading: \"YouTube Video\",\r\n                message: '<div>Will the real Mitt Romney please stand up?</div><div><iframe width=\"530\" height=\"315\" src=\"http://www.youtube.com/embed/bxch-yi14BE\" frameborder=\"0\" allowfullscreen></iframe></div></div>',\r\n                primary: \"OK\",\r\n                secondary: \"Cancel\",\r\n                showBackdrop: true,\r\n                callback: function (opts, event) {\r\n                }\r\n            });        \r\n        }\r\n    });\r\n    \r\n    App.ResourcesView = FadeInView.extend({\r\n        templateName: 'resources-view'\r\n    });\r\n\r\n    App.ContactView = FadeInView.extend({\r\n        templateName: 'contact-view'                \r\n    });\r\n    \r\n    \r\n\r\n    App.Router = Em.Router.extend({\r\n        enableLogging: true,\r\n        location: 'hash',\r\n\r\n        root: Em.Route.extend({\r\n            \r\n            navigateTo: function (router, context){\r\n                // sets the document title with the route name, but you \r\n                // could have another property that keeps the title here\r\n                $(document).attr('title', context.context.get('routeName'));\r\n                // set the route name on the 'selected' property in the controller\r\n                router.set('navigationController.selected', context.context.get('routeName'));\r\n                // finaly transitions to the route that's provided by the model\r\n                router.transitionTo(context.context.get('routePath'), context.context);\r\n            },\r\n            navigateToResources: function (router, context) {\r\n                // since this is not called from a nav link which has a\r\n                // model, the selected and the route must be set manually\r\n                router.set('navigationController.selected','resources');\r\n                router.transitionTo('root.index.resources');\r\n            },\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router) {\r\n                    router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n                },\r\n                home: Em.Route.extend({\r\n                    route: '/',\r\n                    connectOutlets: function (router, context) {\r\n                         router.get('applicationController').connectOutlet('home');\r\n                    }\r\n                }),\r\n                resources: Em.Route.extend({\r\n                    route: '/resources',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('resources');\r\n                    }\r\n                }),\r\n                tutorials: Em.Route.extend({\r\n                    route: '/tutorials',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('tutorials');\r\n                    }\r\n                }),\r\n                contact: Em.Route.extend({\r\n                    route: '/contact',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('contact');\r\n                    }\r\n                })\r\n            })          \r\n        })\r\n    });\r\n    \r\n    App.initialize();\r\n    \r\n});\r\n​"]],"start1":0,"start2":0,"length1":0,"length2":11344}]],"length":11344,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354794072203,"patch":[[{"diffs":[[0,"tend({\r\n        "],[1,"/*"],[0,"templateName: 't"]],"start1":7448,"start2":7448,"length1":32,"length2":34},{"diffs":[[0,"av-bar',"],[1,"*/"],[0,"\r\n      "]],"start1":7486,"start2":7486,"length1":16,"length2":18}]],"length":11348,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354814252182,"patch":[[{"diffs":[[0,"p = "],[-1,"null;\r\n\r\nvar BaseController = null;\r\nvar BaseArrayController = null;\r\nvar BaseView = null;\r\nvar FadeInView = null;\r\n\r\nvar initialize = function() {\r\n    Base"],[1,"Em.Application.create();\r\n\r\nApp.Application"],[0,"Cont"]],"start1":2,"start2":2,"length1":165,"length2":51},{"diffs":[[0,"end();\r\n"],[-1,"    Base"],[1,"App.Application"],[0,"View = E"]],"start1":79,"start2":79,"length1":24,"length2":31},{"diffs":[[0,"end("],[-1,");"],[1,"{"],[0,"\r\n    "],[-1,"FadeInView = BaseView.extend({\r\n        didInsertElement: function() {\r\n            this.$().hide().fadeIn('slow');\r\n        }\r\n    });\r\n    BaseArray"],[1,"templateName: 'application'\r\n});\r\n\r\nApp.Home"],[0,"Cont"]],"start1":120,"start2":120,"length1":166,"length2":59},{"diffs":[[0,"er = Em."],[-1,"Array"],[0,"Controll"]],"start1":183,"start2":183,"length1":21,"length2":16},{"diffs":[[0,");\r\n"],[-1,"};\r\n\r\n\r\n$(function() {\r\n\r\n    initialize();\r\n    \r\n    App = Em.Application.create();\r\n    \r\n    App.Application"],[1,"App.HomeView = Em.View.extend({\r\n    templateName: 'home'\r\n});\r\n\r\nApp.Navbar"],[0,"Cont"]],"start1":209,"start2":209,"length1":120,"length2":84},{"diffs":[[0,"oller = "],[-1,"Base"],[1,"Em."],[0,"Controll"]],"start1":294,"start2":294,"length1":20,"length2":19},{"diffs":[[0,");\r\n"],[-1,"    \r\n    "],[0,"App.Nav"],[-1,"BarItem"],[1,"barView"],[0," = Em."],[-1,"Object"],[1,"View"],[0,".ext"]],"start1":323,"start2":323,"length1":44,"length2":32},{"diffs":[[0,"    "],[-1,"    displayText: '',\r\n        routePath: '',\r\n        routeName: '',\r\n        url: '#'\r\n    });\r\n\r\n    App.Navigation"],[1,"templateName: 'navbar'\r\n});\r\n\r\nApp.Starting"],[0,"Cont"]],"start1":362,"start2":362,"length1":125,"length2":51},{"diffs":[[0,"ontroller = "],[-1,"BaseArray"],[1,"Em."],[0,"Controller.e"]],"start1":410,"start2":410,"length1":33,"length2":27},{"diffs":[[0,"end("],[-1,"{\r\n        content: [],\r\n        selected: null,\r\n        init: function() {\r\n            \r\n            this._super();\r\n            this.pushObject(\r\n                App.NavBarItem.create"],[1,");\r\nApp.StartingView = Em.View.extend"],[0,"({\r\n    "],[-1,"                displayText: 'Home',\r\n                    routeName: 'home',\r\n                    routePath: 'root.index.home'\r\n                "],[1,"templateName: 'starting'\r\n"],[0,"})"],[1,";"],[0,"\r\n"],[-1,"            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Links/Resources',\r\n                    routeName: 'resources',\r\n                    routePath: 'root.index.resources'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Ember Tutorials',\r\n                    routeName: 'tutorials',\r\n                    routePath: 'root.index.tutorials'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Contact',\r\n                    routeName: 'contact',\r\n                    routePath: 'root.index.contact'\r\n                })\r\n            );\r\n        }        \r\n    });\r\n    \r\n    App.Home"],[1,"\r\n\r\nApp.StartingMenuController = Em.Controller.extend();\r\nApp.StartingMenuView = Em.View.extend({\r\n    templateName: 'getting-started-menu'\r\n});\r\n\r\nApp.AboutMVC"],[0,"Cont"]],"start1":439,"start2":439,"length1":1181,"length2":244},{"diffs":[[0,"ontroller = "],[-1,"BaseArray"],[1,"Em."],[0,"Controller.e"]],"start1":680,"start2":680,"length1":33,"length2":27},{"diffs":[[0,"end("],[-1,"{\r\n    \r\n    });\r\n    \r\n    \r\n    App.Resource = Em.Object.extend({\r\n        htmlText: function() {\r\n            return new Handlebars.SafeString(this.get('text'));\r\n        }.property('text'),\r\n        text: '',\r\n        url: '', \r\n        target: '_blank',\r\n        description: '',\r\n        category: ''\r\n    });\r\n    \r\n    App.Resources"],[1,");\r\nApp.AboutMVCView = Em.View.extend({\r\n    templateName: 'about-mvc'\r\n});\r\n\r\nApp.AboutEmber"],[0,"Cont"]],"start1":709,"start2":709,"length1":348,"length2":101},{"diffs":[[0,"ontroller = "],[-1,"BaseArray"],[1,"Em."],[0,"Controller.e"]],"start1":807,"start2":807,"length1":33,"length2":27},{"diffs":[[0,"end("],[-1,"{\r\n        content: [],\r\n        categories: ['All', 'Handlebars', 'Ember', 'Ember Data', 'Bootstrap', 'Other'],\r\n        categorySelected: 'All',\r\n        filtered: function() {\r\n            if(this.get('categorySelected') == \"All\") {\r\n                return this.get('content');                                        \r\n            } else {\r\n                return this.get(\"content\")\r\n                           .filterProperty(\r\n                               \"category\",\r\n                               this.get('categorySelected')\r\n                           );\r\n            }            \r\n        }.property('content.@each', 'categorySelected'),\r\n        filteredCount: function() {\r\n            return this.get('filtered').length;                                        \r\n        }.property('content.@each', 'categorySelected'),\r\n        hasItems: function() {\r\n            return this.get('filtered').length > 0;\r\n        }.property('filteredCount'), \r\n    "],[1,");\r\nApp.AboutEmberView = Em.View.extend({\r\n    templateName: 'about-ember'\r\n});\r\n\r\nApp.CommunityModel = Em.Object.extend({\r\n    displayName: null,\r\n    linkUrl: null,\r\n    imageUrl: null\r\n});\r\n\r\nApp.CommunityController = Em.ArrayController.extend({\r\n    content: [],\r\n"],[0,"    "]],"start1":836,"start2":836,"length1":974,"length2":276},{"diffs":[[0," {\r\n        "],[-1,"    "],[0,"this._super("]],"start1":1128,"start2":1128,"length1":28,"length2":24},{"diffs":[[0,"._super();\r\n"],[-1,"\r\n    "],[0,"        this"]],"start1":1144,"start2":1144,"length1":30,"length2":24},{"diffs":[[0,"        "],[-1,"        App.Resource"],[1,"App.CommunityModel"],[0,".create("]],"start1":1182,"start2":1182,"length1":36,"length2":34},{"diffs":[[0,"    "],[-1,"        text: 'StackOverflow with <em>ember.js</em> tag"],[1,"displayName: 'Twitter"],[0,"',\r\n"]],"start1":1227,"start2":1227,"length1":63,"length2":29},{"diffs":[[0,"            "],[-1,"        u"],[1,"linkU"],[0,"rl: 'http://"]],"start1":1256,"start2":1256,"length1":33,"length2":29},{"diffs":[[0,"http"],[1,"s"],[0,"://"],[-1,"stackoverflow.com/questions/tagged"],[1,"twitter.com/#!"],[0,"/ember"],[-1,"."],[0,"js"],[-1,"?sort=votes"],[0,"',\r\n"]],"start1":1278,"start2":1278,"length1":65,"length2":34},{"diffs":[[0,"    "],[-1,"        description: 'Takes you to a list of general questions/answers about Ember.js',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'StackOverflow with <em>ember-data</em> tag',\r\n                    url: 'http://stackoverflow.com/questions/tagged/ember-data?sort=votes',\r\n                    description: 'Takes you to a list of questions/answers about Ember Data',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Getting Started With EmberJS',\r\n                    url: 'http://andymatthews.net/read/2012/03/07/Getting-Started-With-EmberJS',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews',\r\n                    category: 'Ember'\r\n       "],[1,"imageUrl: 'http://icons.iconarchive.com/icons/iconshots/social-media-network/32/twitter-icon.png'\r\n"],[0,"        "],[-1," "],[0,"})"],[-1,"\r\n            "],[0,");\r\n"]],"start1":1320,"start2":1320,"length1":969,"length2":117},{"diffs":[[0,"  }));\r\n        "],[-1,"    "],[0,"this.pushObject("]],"start1":1429,"start2":1429,"length1":36,"length2":32},{"diffs":[[0,"        "],[-1,"        App.Resource"],[1,"App.CommunityModel"],[0,".create("]],"start1":1463,"start2":1463,"length1":36,"length2":34},{"diffs":[[0,"    "],[-1,"        text: 'Flame on! A beginner\\'s guide to Ember.js"],[1,"displayName: 'GitHub"],[0,"',\r\n"]],"start1":1508,"start2":1508,"length1":64,"length2":28},{"diffs":[[0,"            "],[-1,"        u"],[1,"linkU"],[0,"rl: 'http://"]],"start1":1536,"start2":1536,"length1":33,"length2":29},{"diffs":[[0,"http"],[1,"s"],[0,"://"],[-1,"www.adobe.com/devnet/html5/articles/flame-on-a-beginners-guide-to-emberjs.html',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews touching several beginner subjects',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Video: Tom Dale speaking on PragueJS',\r\n                    url: 'http://www.youtube.com/watch?v=djhAsWGOImk',\r\n                    description: 'Video: Tom Dale speaking on PragueJS',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'JavaScript Templating with Handlebars',\r\n                    url: 'http://javascriptplayground.com/blog/2012/05/javascript-templating-handlebars-tutorial',\r\n                    description: 'JavaScript Templating with Handlebars',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Ember/Handlebars template precompilation with Play',\r\n                    url: 'http://eng.netwallet.com/2012/04/25/emberhandlebars-template-precompilation-with-play/',\r\n                    description: 'Ember/Handlebars template precompilation with Play',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Game On: Backbone and Ember',\r\n                    url: 'http://net.tutsplus.com/tutorials/javascript-ajax/game-on-backbone-and-ember/',\r\n                    description: 'Game On: Backbone and Ember',\r\n                    category: 'Other'\r\n                })    \r\n            );\r\nthis.pushObject(\r\n                App.Resource.create({\r\n                    text: 'List of running Ember-Bootstrap controls and code',\r\n                    url: 'http://jzajpt.github.com/ember-bootstrap/',\r\n                    description: 'List of running Ember-Bootstrap controls and code',\r\n                    category: 'Bootstrap'\r\n                })    \r\n            );\r\n\r\n        }\r\n    });    \r\n    \r\n    App.ContactController = BaseArrayController.extend({\r\n    \r\n    });\r\n\r\n    App.ApplicationView = BaseView.extend({ \r\n        templateName: 'app-view' \r\n    });\r\n\r\n    App.TutorialsController = BaseArrayController.extend({\r\n        \r\n    });\r\n\r\n    App.TutorialsView = FadeInView.extend({\r\n        templateName: 'tutorials-view'\r\n    });\r\n\r\n    App.NavigationView = BaseView.extend({\r\n        /*templateName: 'top-nav-bar',*/\r\n        selectedBinding: 'controller.selected',\r\n        NavigationItemView: BaseView.extend({\r\n            tagName: 'li',\r\n            classNameBindings: 'isActive:active'.w(),\r\n            isActive: function() {\r\n                return this.get('menu') === this.get('parentView.selected');\r\n            }.property('item', 'parentView.selected').cacheable(),\r\n        })\r\n    });\r\n    \r\n    App.HomeView = FadeInView.extend({\r\n        templateName: 'home-view',\r\n        watchVideo: function(e) {\r\n            Bootstrap.ModalPane.popup({\r\n                heading: \"YouTube Video\",\r\n                message: '<div>Will the real Mitt Romney please stand up?</div><div><iframe width=\"530\" height=\"315\" src=\"http://www.youtube.com/embed/bxch-yi14BE\" frameborder=\"0\" allowfullscreen></iframe></div></div>',\r\n                primary: \"OK\",\r\n                secondary: \"Cancel\",\r\n                showBackdrop: true,\r\n                callback: function (opts, event) {\r\n                }\r\n            });        \r\n        }\r\n    });\r\n    \r\n    App.ResourcesView = FadeInView.extend({\r\n        templateName: 'resources-view'\r\n    });\r\n\r\n    App.ContactView = FadeInView.extend({\r\n        templateName: 'contact-view'                \r\n    });\r\n    \r\n    \r\n\r\n    App.Router = Em.Router.extend({\r\n        enableLogging: true,\r\n        location: 'hash',\r\n\r\n        root: Em.Route.extend({\r\n            \r\n            navigateTo: function (router, context){\r\n                // sets the document title with the route name, but you \r\n                // could have another property that keeps the title here\r\n                $(document).attr('title', context.context.get('routeName'));\r\n                // set the route name on the 'selected' property in the controller\r\n                router.set('navigationController.selected', context.context.get('routeName'));\r\n                // finaly transitions to the route that's provided by the model\r\n                router.transitionTo(context.context.get('routePath'), context.context);\r\n            },\r\n            navigateToResources: function (router, context) {\r\n                // since this is not called from a nav link which has a\r\n                // model, the selected and the route must be set manually\r\n                router.set('navigationController.selected','resources');\r\n                router.transitionTo('root.index.resources');\r\n            },\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router) {\r\n                    router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n                },\r\n                home: Em.Route.extend({\r\n                    route: '/',\r\n                    connectOutlets: function (router, context) {\r\n                         router.get('applicationController').connectOutlet('home');\r\n                    }\r\n                }),\r\n                resources: Em.Route.extend({\r\n                    route: '/resources',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('resources');\r\n                    }\r\n                }),\r\n                tutorials: Em.Route.extend({\r\n                    route: '/tutorials',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('tutorials');\r\n                    }\r\n                }),\r\n                contact: Em.Route.extend({\r\n                    route: '/contact',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('contact');\r\n                    }\r\n                })\r\n            })          \r\n        })\r\n    });\r\n    \r\n    App.initialize();\r\n    \r\n});\r\n"],[1,"github.com/emberjs/ember.js',\r\n            imageUrl: 'http://www.workinprogress.ca/wp-content/uploads/github.png'\r\n        }));\r\n    }\r\n});\r\n\r\nApp.CommunityView = Em.View.extend({\r\n    templateName: 'community',\r\n    contentBinding: 'App.CommunityController.content'\r\n});\r\n\r\nApp.Router = Em.Router.extend({\r\n    enableLogging: true,\r\n    location: 'hash',\r\n\r\n    root: Em.Route.extend({\r\n        // EVENTS\r\n        gotoHome: Ember.Route.transitionTo('home'),\r\n        gotoStarting: Ember.Route.transitionTo('starting.index'),\r\n        gotoCommunity: Ember.Route.transitionTo('community.index'),\r\n\r\n        // STATES\r\n        home: Em.Route.extend({\r\n            route: '/',\r\n            connectOutlets: function(router, context) {\r\n                router.get('applicationController').connectOutlet('home');\r\n            }\r\n        }),\r\n        starting: Em.Route.extend({\r\n            // SETUP\r\n            route: '/starting',\r\n            connectOutlets: function(router, context) {\r\n                router.get('applicationController').connectOutlet('starting');\r\n            },\r\n            // EVENTS\r\n            gotoMVC: Ember.Route.transitionTo('mvc'),\r\n            gotoEmber: Ember.Route.transitionTo('ember'),\r\n            gotoIndex: Ember.Route.transitionTo('index'),\r\n\r\n            // STATES\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('starting');\r\n                }\r\n            }),\r\n            mvc: Em.Route.extend({\r\n                route: '/mvc',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('aboutMVC');\r\n                }\r\n            }),\r\n            ember: Em.Route.extend({\r\n                route: '/ember',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('aboutEmber');\r\n                }\r\n            })\r\n        }),\r\n        community: Em.Route.extend({\r\n            // SETUP\r\n            route: '/community',\r\n            connectOutlets: function(router, context) {\r\n                router.get('applicationController').connectOutlet('community');\r\n            },\r\n            // EVENTS\r\n            // STATES\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('community');\r\n                }\r\n            })\r\n        })\r\n    })\r\n});\r\nApp.initialize();"],[0,"​"]],"start1":1558,"start2":1558,"length1":6569,"length2":2659}]],"length":4217,"saved":false}
{"ts":1354815311951,"patch":[[{"diffs":[[1,"var "],[0,"App = Em"],[1,"ber"],[0,".App"]],"start1":0,"start2":0,"length1":12,"length2":19},{"diffs":[[0,"= Em"],[-1,".Controller.extend();\r\nApp.ApplicationView = Em.View.extend({\r\n    templateName: 'application'\r\n});\r\n\r\nApp.HomeController = Em.Controller.extend();\r\nApp.HomeView = Em.View.extend({\r\n    templateName: 'home'\r\n});\r\n\r\nApp.NavbarController = Em.Controller.extend();\r\nApp.NavbarView = Em.View.extend({\r\n    templateName: 'navbar'\r\n});\r\n\r\nApp.StartingController = Em.Controller.extend();\r\nApp.StartingView = Em.View.extend({\r\n    templateName: 'starting'\r\n});\r\n\r\n\r\nApp.StartingMenuController = Em.Controller.extend();\r\nApp.StartingMenuView = Em.View.extend({\r\n    templateName: 'getting-started-menu'\r\n});\r\n\r\nApp.AboutMVCController = Em.Controller.extend();\r\nApp.AboutMVCView = Em"],[1,"ber.Controller.extend();\r\nApp.ApplicationView = Ember"],[0,".Vie"]],"start1":67,"start2":67,"length1":682,"length2":61},{"diffs":[[0,".View.extend({\r\n"],[-1,"  "],[0,"  templateName: "]],"start1":124,"start2":124,"length1":34,"length2":32},{"diffs":[[0,": 'a"],[-1,"bout-mvc'\r\n});\r\n\r\nApp.AboutEmberController = Em.Controller.extend();\r\nApp.AboutEmberView = Em.View.extend({\r\n    templateName: 'about-ember'\r\n});\r\n\r\nApp.CommunityModel = Em.Object.extend({\r\n    displayName: null,\r\n    linkUrl: null,\r\n    imageUrl: null\r\n});\r\n\r\nApp.CommunityController = Em.ArrayController.extend({\r\n    content: [],\r\n    init: function() {\r\n        this._super();\r\n        this.pushObject(\r\n        App.CommunityModel.create({\r\n            displayName: 'Twitter',\r\n            linkUrl: 'https://twitter.com/#!/emberjs',\r\n            imageUrl: 'http://icons.iconarchive.com/icons/iconshots/social-media-network/32/twitter-icon.png'\r\n        }));\r\n        this.pushObject(\r\n        App.CommunityModel.create({\r\n            displayName: 'GitHub',\r\n            linkUrl: 'https://github.com/emberjs/ember.js',\r\n            imageUrl: 'http://www.workinprogress.ca/wp-content/uploads/github.png'\r\n        }));\r\n    }\r\n});\r\n\r\nApp.CommunityView = Em.View.extend({\r\n    templateName: 'community',\r\n    contentBinding: 'App.CommunityController.content'\r\n});\r\n\r\nApp.Router = Em.Router.extend({\r\n    enableLogging: true,\r\n    location: 'hash',\r\n\r\n    root: Em.Route.extend({\r\n        // EVENTS\r\n        gotoHome: Ember.Route.transitionTo('home'),\r\n        gotoStarting: Ember.Route.transitionTo('starting.index'),\r\n        gotoCommunity: Ember.Route.transitionTo('community.index'),\r\n\r\n        // STATES\r\n        home: Em.Route.extend({\r\n            route: '/',\r\n            connectOutlets: function(router, context) {\r\n                router.get('applicationController').connectOutlet('home');\r\n            }\r\n        }),\r\n        starting: Em.Route.extend({\r\n            // SETUP\r\n            route: '/starting',\r\n            connectOutlets: function(router, context) {\r\n                router.get('applicationController').connectOutlet('starting');\r\n            },\r\n            // EVENTS\r\n            gotoMVC: Ember.Route.transitionTo('mvc'),\r\n            gotoEmber: Ember.Route.transitionTo('ember'),\r\n            gotoIndex: Ember.Route.transitionTo('index'),\r\n\r\n            // STATES\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('starting');\r\n                }\r\n            }),\r\n            mvc: Em.Route.extend({\r\n                route: '/mvc',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('aboutMVC');\r\n                }\r\n            }),\r\n            ember: Em.Route.extend({\r\n                route: '/ember',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('aboutEmber');\r\n                }\r\n            })\r\n        }),\r\n        community: Em.Route.extend({\r\n            // SETUP\r\n            route: '/community',\r\n            connectOutlets: function(router, context) {\r\n                router.get('applicationController').connectOutlet('community');\r\n            },\r\n            // EVENTS\r\n            // STATES\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router, context) {\r\n                    router.get('applicationController').connectOutlet('community');\r\n                }\r\n            })\r\n        })\r\n    })\r\n});"],[1,"pplication'\r\n});\r\n\r\nApp.Router = Ember.Router.extend({\r\n  root: Ember.Route.extend({\r\n    index: Ember.Route.extend({\r\n      route: '/'\r\n    })\r\n  })\r\n})\r\n"],[0,"\r\nAp"]],"start1":154,"start2":154,"length1":3431,"length2":163},{"diffs":[[0,"e();"],[-1,"​"]],"start1":328,"start2":328,"length1":5,"length2":4}]],"length":332,"saved":false}
{"ts":1354815502244,"patch":[[{"diffs":[[0,"App."],[-1,"ApplicationController = Ember.Controller.extend();\r\nApp.ApplicationView = Ember.View.extend({\r\n  templateName: 'application'"],[1,"NavBarItem = Em.Object.extend({\r\n    displayText: '',\r\n    routePath: '',\r\n    routeName: '',\r\n    url: '#'\r\n});\r\n    \r\nApp.ApplicationController = Ember.Controller.extend();\r\nApp.ApplicationView = Ember.View.extend({\r\n  templateName: 'application'\r\n});\r\n\r\nApp.NavigationView = BaseView.extend({\r\n    templateName: 'top-nav-bar',\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: BaseView.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    })"],[0,"\r\n})"]],"start1":41,"start2":41,"length1":132,"length2":678}]],"length":878,"saved":false}
{"ts":1354815512684,"patch":[[{"diffs":[[-1,"var App = Ember.Application.create();\r\n\r\n"],[1,"App = null;\r\n\r\nvar BaseController = null;\r\nvar BaseArrayController = null;\r\nvar BaseView = null;\r\nvar FadeInView = null;\r\n\r\nvar initialize = function() {\r\n    BaseController = Em.Controller.extend();\r\n    BaseView = Em.View.extend();\r\n    FadeInView = BaseView.extend({\r\n        didInsertElement: function() {\r\n            this.$().hide().fadeIn('slow');\r\n        }\r\n    });\r\n    BaseArrayController = Em.ArrayController.extend();\r\n};\r\n\r\n\r\n$(function() {\r\n\r\n    initialize();\r\n    \r\n    App = Em.Application.create();\r\n    \r\n    App.ApplicationController = BaseController.extend();\r\n    \r\n    "],[0,"App."]],"start1":0,"start2":0,"length1":45,"length2":597},{"diffs":[[0,"t.extend({\r\n"],[1,"    "],[0,"    displayT"]],"start1":618,"start2":618,"length1":24,"length2":28},{"diffs":[[0,"t: '',\r\n    "],[1,"  "],[1,"  "],[0,"routePath: '"]],"start1":648,"start2":648,"length1":24,"length2":28},{"diffs":[[0,"h: '',\r\n    "],[1,"   "],[1," "],[0,"routeName: '"]],"start1":672,"start2":672,"length1":24,"length2":28},{"diffs":[[0,"eName: '',\r\n"],[1,"    "],[0,"    url: '#'"]],"start1":692,"start2":692,"length1":24,"length2":28},{"diffs":[[0,"#'\r\n"],[1,"    "],[0,"});\r\n"],[1,"\r\n"],[0,"    "],[-1,"\r\nApp.ApplicationController = Ember.Controller.extend();\r\nApp.ApplicationView = Ember.View.extend({\r\n  templateName: 'application'\r\n});\r\n\r\n"],[1,"App.NavigationController = BaseArrayController.extend({\r\n        content: [],\r\n        selected: null,\r\n        init: function() {\r\n            \r\n            this._super();\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Home',\r\n                    routeName: 'home',\r\n                    routePath: 'root.index.home'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Links/Resources',\r\n                    routeName: 'resources',\r\n                    routePath: 'root.index.resources'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Ember Tutorials',\r\n                    routeName: 'tutorials',\r\n                    routePath: 'root.index.tutorials'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Contact',\r\n                    routeName: 'contact',\r\n                    routePath: 'root.index.contact'\r\n                })\r\n            );\r\n        }        \r\n    });\r\n    \r\n    App.HomeController = BaseArrayController.extend({\r\n    \r\n    });\r\n    \r\n    \r\n    App.Resource = Em.Object.extend({\r\n        htmlText: function() {\r\n            return new Handlebars.SafeString(this.get('text'));\r\n        }.property('text'),\r\n        text: '',\r\n        url: '', \r\n        target: '_blank',\r\n        description: '',\r\n        category: ''\r\n    });\r\n    \r\n    App.ResourcesController = BaseArrayController.extend({\r\n        content: [],\r\n        categories: ['All', 'Handlebars', 'Ember', 'Ember Data', 'Bootstrap', 'Other'],\r\n        categorySelected: 'All',\r\n        filtered: function() {\r\n            if(this.get('categorySelected') == \"All\") {\r\n                return this.get('content');                                        \r\n            } else {\r\n                return this.get(\"content\")\r\n                           .filterProperty(\r\n                               \"category\",\r\n                               this.get('categorySelected')\r\n                           );\r\n            }            \r\n        }.property('content.@each', 'categorySelected'),\r\n        filteredCount: function() {\r\n            return this.get('filtered').length;                                        \r\n        }.property('content.@each', 'categorySelected'),\r\n        hasItems: function() {\r\n            return this.get('filtered').length > 0;\r\n        }.property('filteredCount'), \r\n        init: function() {\r\n            this._super();\r\n\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'StackOverflow with <em>ember.js</em> tag',\r\n                    url: 'http://stackoverflow.com/questions/tagged/ember.js?sort=votes',\r\n                    description: 'Takes you to a list of general questions/answers about Ember.js',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'StackOverflow with <em>ember-data</em> tag',\r\n                    url: 'http://stackoverflow.com/questions/tagged/ember-data?sort=votes',\r\n                    description: 'Takes you to a list of questions/answers about Ember Data',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Getting Started With EmberJS',\r\n                    url: 'http://andymatthews.net/read/2012/03/07/Getting-Started-With-EmberJS',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Flame on! A beginner\\'s guide to Ember.js',\r\n                    url: 'http://www.adobe.com/devnet/html5/articles/flame-on-a-beginners-guide-to-emberjs.html',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews touching several beginner subjects',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Video: Tom Dale speaking on PragueJS',\r\n                    url: 'http://www.youtube.com/watch?v=djhAsWGOImk',\r\n                    description: 'Video: Tom Dale speaking on PragueJS',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'JavaScript Templating with Handlebars',\r\n                    url: 'http://javascriptplayground.com/blog/2012/05/javascript-templating-handlebars-tutorial',\r\n                    description: 'JavaScript Templating with Handlebars',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Ember/Handlebars template precompilation with Play',\r\n                    url: 'http://eng.netwallet.com/2012/04/25/emberhandlebars-template-precompilation-with-play/',\r\n                    description: 'Ember/Handlebars template precompilation with Play',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Game On: Backbone and Ember',\r\n                    url: 'http://net.tutsplus.com/tutorials/javascript-ajax/game-on-backbone-and-ember/',\r\n                    description: 'Game On: Backbone and Ember',\r\n                    category: 'Other'\r\n                })    \r\n            );\r\nthis.pushObject(\r\n                App.Resource.create({\r\n                    text: 'List of running Ember-Bootstrap controls and code',\r\n                    url: 'http://jzajpt.github.com/ember-bootstrap/',\r\n                    description: 'List of running Ember-Bootstrap controls and code',\r\n                    category: 'Bootstrap'\r\n                })    \r\n            );\r\n\r\n        }\r\n    });    \r\n    \r\n    App.ContactController = BaseArrayController.extend({\r\n    \r\n    });\r\n\r\n    App.ApplicationView = BaseView.extend({ \r\n        templateName: 'app-view' \r\n    });\r\n\r\n    App.TutorialsController = BaseArrayController.extend({\r\n        \r\n    });\r\n\r\n    App.TutorialsView = FadeInView.extend({\r\n        templateName: 'tutorials-view'\r\n    });\r\n\r\n    "],[0,"App."]],"start1":718,"start2":718,"length1":156,"length2":6702},{"diffs":[[0,"w.extend({\r\n"],[1,"    "],[0,"    template"]],"start1":7444,"start2":7444,"length1":24,"length2":28},{"diffs":[[0,"-nav-bar',\r\n"],[1,"    "],[0,"    selected"]],"start1":7482,"start2":7482,"length1":24,"length2":28},{"diffs":[[0,"',\r\n    "],[1,"   "],[1," "],[0,"Navigati"]],"start1":7539,"start2":7539,"length1":16,"length2":20},{"diffs":[[0,"eView.extend({\r\n"],[1,"    "],[0,"        tagName:"]],"start1":7574,"start2":7574,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"classNam"]],"start1":7618,"start2":7618,"length1":16,"length2":20},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"isActive"]],"start1":7673,"start2":7673,"length1":16,"length2":20},{"diffs":[[0,": function() {\r\n"],[1,"    "],[0,"            retu"]],"start1":7693,"start2":7693,"length1":32,"length2":36},{"diffs":[[0,"ted');\r\n        "],[1,"   "],[1," "],[0,"}.property('item"]],"start1":7779,"start2":7779,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"})\r\n});\r\n\r\nApp.Router = Ember.Router.extend({\r\n  root: Ember.Route.extend({\r\n    index: Ember"],[1,"    })\r\n    });\r\n    \r\n    App.HomeView = FadeInView.extend({\r\n        templateName: 'home-view',\r\n        watchVideo: function(e) {\r\n            Bootstrap.ModalPane.popup({\r\n                heading: \"YouTube Video\",\r\n                message: '<div>Will the real Mitt Romney please stand up?</div><div><iframe width=\"530\" height=\"315\" src=\"http://www.youtube.com/embed/bxch-yi14BE\" frameborder=\"0\" allowfullscreen></iframe></div></div>',\r\n                primary: \"OK\",\r\n                secondary: \"Cancel\",\r\n                showBackdrop: true,\r\n                callback: function (opts, event) {\r\n                }\r\n            });        \r\n        }\r\n    });\r\n    \r\n    App.ResourcesView = FadeInView.extend({\r\n        templateName: 'resources-view'\r\n    });\r\n\r\n    App.ContactView = FadeInView.extend({\r\n        templateName: 'contact-view'                \r\n    });\r\n    \r\n    \r\n\r\n    App.Router = Em.Router.extend({\r\n        enableLogging: true,\r\n        location: 'hash',\r\n\r\n        root: Em.Route.extend({\r\n            \r\n            navigateTo: function (router, context){\r\n                // sets the document title with the route name, but you \r\n                // could have another property that keeps the title here\r\n                $(document).attr('title', context.context.get('routeName'));\r\n                // set the route name on the 'selected' property in the controller\r\n                router.set('navigationController.selected', context.context.get('routeName'));\r\n                // finaly transitions to the route that's provided by the model\r\n                router.transitionTo(context.context.get('routePath'), context.context);\r\n            },\r\n            navigateToResources: function (router, context) {\r\n                // since this is not called from a nav link which has a\r\n                // model, the selected and the route must be set manually\r\n                router.set('navigationController.selected','resources');\r\n                router.transitionTo('root.index.resources');\r\n            },\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router) {\r\n                    router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n                },\r\n                home: Em.Route.extend({\r\n                    route: '/',\r\n                    connectOutlets: function (router, context) {\r\n                         router.get('applicationController').connectOutlet('home');\r\n                    }\r\n                }),\r\n                resources: Em.Route.extend({\r\n                    route: '/resources',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('resources');\r\n                    }\r\n                }),\r\n                tutorials: Em.Route.extend({\r\n                    route: '/tutorials',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('tutorials');\r\n                    }\r\n                }),\r\n                contact: Em"],[0,".Rou"]],"start1":7855,"start2":7855,"length1":101,"length2":3152},{"diffs":[[0,"e.extend({\r\n"],[1,"              "],[0,"      route:"]],"start1":11008,"start2":11008,"length1":24,"length2":38},{"diffs":[[0,": '/"],[-1,"'\r\n    })\r\n  })\r\n})\r\n\r\n"],[1,"contact',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('contact');\r\n                    }\r\n                })\r\n            })          \r\n        })\r\n    });\r\n    \r\n    "],[0,"App."]],"start1":11045,"start2":11045,"length1":31,"length2":272},{"diffs":[[0,"   App.initialize();"],[1,"\r\n    \r\n});\r\n​"]],"start1":11310,"start2":11310,"length1":20,"length2":34}]],"length":11344,"saved":false}
{"ts":1354815747980,"patch":[[{"diffs":[[-1,"App = null;\r\n\r\nvar BaseController = null;\r\nvar BaseArrayController = null;\r\nvar BaseView = null;\r\nvar FadeInView = null;\r\n\r\nvar initialize = function() {\r\n    BaseController = Em.Controller.extend();\r\n    BaseView = Em.View.extend();\r\n    FadeInView = BaseView.extend({\r\n        didInsertElement: function() {\r\n            this.$().hide().fadeIn('slow');\r\n        }\r\n    });\r\n    BaseArrayController = Em.ArrayController.extend();\r\n};\r\n\r\n\r\n$(function() {\r\n\r\n    initialize();\r\n    \r\n    App = Em.Application.create();\r\n    \r\n    App.ApplicationController = BaseController.extend();\r\n    \r\n    App.NavBarItem = Em.Object.extend({\r\n        displayText: '',\r\n        routePath: '',\r\n        routeName: '',\r\n        url: '#'\r\n    });\r\n\r\n    App.NavigationController = BaseArrayController.extend({\r\n        content: [],\r\n        selected: null,\r\n        init: function() {\r\n            \r\n            this._super();\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Home',\r\n                    routeName: 'home',\r\n                    routePath: 'root.index.home'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Links/Resources',\r\n                    routeName: 'resources',\r\n                    routePath: 'root.index.resources'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Ember Tutorials',\r\n                    routeName: 'tutorials',\r\n                    routePath: 'root.index.tutorials'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.NavBarItem.create({\r\n                    displayText: 'Contact',\r\n                    routeName: 'contact',\r\n                    routePath: 'root.index.contact'\r\n                })\r\n            );\r\n        }        \r\n    });\r\n    \r\n    App.HomeController = BaseArrayController.extend({\r\n    \r\n    });\r\n    \r\n    \r\n    App.Resource = Em.Object.extend({\r\n        htmlText: function() {\r\n            return new Handlebars.SafeString(this.get('text'));\r\n        }.property('text'),\r\n        text: '',\r\n        url: '', \r\n        target: '_blank',\r\n        description: '',\r\n        category: ''\r\n    });\r\n    \r\n    App.ResourcesController = BaseArrayController.extend({\r\n        content: [],\r\n        categories: ['All', 'Handlebars', 'Ember', 'Ember Data', 'Bootstrap', 'Other'],\r\n        categorySelected: 'All',\r\n        filtered: function() {\r\n            if(this.get('categorySelected') == \"All\") {\r\n                return this.get('content');                                        \r\n            } else {\r\n                return this.get(\"content\")\r\n                           .filterProperty(\r\n                               \"category\",\r\n                               this.get('categorySelected')\r\n                           );\r\n            }            \r\n        }.property('content.@each', 'categorySelected'),\r\n        filtered"],[1,"var App = Ember.Application.create();\r\n\r\nApp.Application"],[0,"Co"],[-1,"u"],[0,"nt"],[-1,": function() {\r\n            return this.get('filtered').length;                                        \r\n        }.property('content.@each', 'categorySelected'),\r\n        hasItems: function() {\r\n            return this.get('filtered').length > 0;\r\n        }.property('filteredCount'), \r\n        init: function() {\r\n            this._super();\r\n\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'StackOverflow with <em>ember.js</em> tag',\r\n                    url: 'http://stackoverflow.com/questions/tagged/ember.js?sort=votes',\r\n                    description: 'Takes you to a list of general questions/answers about Ember.js',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'StackOverflow with <em>ember-data</em> tag',\r\n                    url: 'http://stackoverflow.com/questions/tagged/ember-data?sort=votes',\r\n                    description: 'Takes you to a list of questions/answers about Ember Data',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Getting Started With EmberJS',\r\n                    url: 'http://andymatthews.net/read/2012/03/07/Getting-Started-With-EmberJS',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Flame on! A beginner\\'s guide to Ember.js',\r\n                    url: 'http://www.adobe.com/devnet/html5/articles/flame-on-a-beginners-guide-to-emberjs.html',\r\n                    description: 'Introductory article about Ember.js by Andy Matthews touching several beginner subjects',\r\n                    category: 'Ember'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Video: Tom Dale speaking on PragueJS',\r\n                    url: 'http://www.youtube.com/watch?v=djhAsWGOImk',\r\n                    description: 'Video: Tom Dale speaking on PragueJS',\r\n                    category: 'Ember Data'\r\n                })\r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'JavaScript Templating with Handlebars',\r\n                    url: 'http://javascriptplayground.com/blog/2012/05/javascript-templating-handlebars-tutorial',\r\n                    description: 'JavaScript Templating with Handlebars',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Ember/Handlebars template precompilation with Play',\r\n                    url: 'http://eng.netwallet.com/2012/04/25/emberhandlebars-template-precompilation-with-play/',\r\n                    description: 'Ember/Handlebars template precompilation with Play',\r\n                    category: 'Handlebars'\r\n                })    \r\n            );\r\n            this.pushObject(\r\n                App.Resource.create({\r\n                    text: 'Game On: Backbone and Ember',\r\n                    url: 'http://net.tutsplus.com/tutorials/javascript-ajax/game-on-backbone-and-ember/',\r\n                    description: 'Game On: Backbone and Ember',\r\n                    category: 'Other'\r\n                })    \r\n            );\r\nthis.pushObject(\r\n                App.Resource.create({\r\n                    text: 'List of running Ember-Bootstrap controls and code',\r\n                    url: 'http://jzajpt.github.com/ember-bootstrap/',\r\n                    description: 'List of running Ember-Bootstrap controls and code',\r\n                    category: 'Bootstrap'\r\n                })    \r\n            );\r\n\r\n        }\r\n    });    \r\n    \r\n    App.ContactController = BaseArrayController.extend({\r\n    \r\n    });\r\n\r\n    App.ApplicationView = BaseView.extend({ \r\n        templateName: 'app-view' \r\n    });\r\n\r\n    App.TutorialsController = BaseArrayController.extend({\r\n        \r\n    });\r\n\r\n    App.TutorialsView = FadeInView.extend({\r\n        templateName: 'tutorials-view'\r\n    });\r\n\r\n    App.NavigationView = BaseView.extend({\r\n        templateName: 'top-nav-bar',\r\n        selectedBinding: 'controller.selected',\r\n        NavigationItemView: BaseView.extend({\r\n            tagName: 'li',\r\n            classNameBindings: 'isActive:active'.w(),\r\n            isActive: function() {\r\n                return this.get('menu') === this.get('parentView.selected');\r\n            }.property('item', 'parentView.selected').cacheable(),\r\n        })\r\n    });\r\n    \r\n    App.HomeView = FadeInView.extend({\r\n        templateName: 'home-view',\r\n        watchVideo: function(e) {\r\n            Bootstrap.ModalPane.popup({\r\n                heading: \"YouTube Video\",\r\n                message: '<div>Will the real Mitt Romney please stand up?</div><div><iframe width=\"530\" height=\"315\" src=\"http://www.youtube.com/embed/bxch-yi14BE\" frameborder=\"0\" allowfullscreen></iframe></div></div>',\r\n                primary: \"OK\",\r\n                secondary: \"Cancel\",\r\n                showBackdrop: true,\r\n                callback: function (opts, event) {\r\n                }\r\n            });        \r\n        }\r\n    });\r\n    \r\n    App.ResourcesView = FadeInView.extend({\r\n        templateName: 'resources-view'\r\n    });\r\n\r\n    App.ContactView = FadeInView.extend({\r\n        templateName: 'contact-view'                \r\n    });\r\n    \r\n    \r\n\r\n    App.Router = Em.Router.extend({\r\n        enableLogging: true,\r\n        location: 'hash',\r\n\r\n        root: Em.Route.extend({\r\n            \r\n            navigateTo: function (router, context){\r\n                // sets the document title with the route name, but you \r\n                // could have another property that keeps the title here\r\n                $(document).attr('title', context.context.get('routeName'));\r\n                // set the route name on the 'selected' property in the controller\r\n                router.set('navigationController.selected', context.context.get('routeName'));\r\n                // finaly transitions to the route that's provided by the model\r\n                router.transitionTo(context.context.get('routePath'), context.context);\r\n            },\r\n            navigateToResources: function (router, context) "],[1,"roller = Ember.Controller.extend();\r\nApp.ApplicationView = Ember.View.extend({\r\n  templateName: 'application'\r\n});\r\n\r\nApp.Router = Ember.Router.extend("],[0,"{\r\n  "],[-1," "],[-1,"             // since this is not called from a nav link which has a\r\n                // model, the selected and the route must be set manually\r\n                router.set('navigationController.selected','resources');\r\n                router.transitionTo('root.index.resources');\r\n            },\r\n            index: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function(router) {\r\n                    router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n                },\r\n                home: Em.Route.extend({\r\n                    route: '/',\r\n                    connectOutlets: function (router, context) {\r\n                         router.get('applicationController').connectOutlet('home');\r\n                    }\r\n                }),\r\n                resources: Em.Route.extend({\r\n                    route: '/resources',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('resources');\r\n                    }\r\n                }),\r\n                tutorials: Em.Route.extend({\r\n                    route: '/tutorials',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('tutorials');\r\n                    }\r\n                }),\r\n                contact: Em.Route.extend({\r\n                    route: '/contact',\r\n                    connectOutlets: function (router, context) {\r\n                        router.get('applicationController').connectOutlet('contact');\r\n                    }\r\n                })\r\n            })          \r\n        })\r\n    });\r\n    \r\n    "],[1,"root: Ember.Route.extend({\r\n    index: Ember.Route.extend({\r\n      route: '/'\r\n    })\r\n  })\r\n})\r\n\r\n"],[0,"App."]],"start1":0,"start2":0,"length1":11317,"length2":319},{"diffs":[[0,"e();"],[-1,"\r\n    \r\n});\r\n​"]],"start1":328,"start2":328,"length1":18,"length2":4}]],"length":332,"saved":false}
{"ts":1354815851779,"patch":[[{"diffs":[[0,"on'\r\n});\r\n\r\n"],[1,"App.NavigationView = BaseView.extend({\r\n    templateName: 'top-nav-bar',\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: BaseView.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    })\r\n});\r\n\r\n"],[0,"App.Router ="]],"start1":166,"start2":166,"length1":24,"length2":446}]],"length":754,"saved":false}
{"ts":1354815919148,"patch":[[{"diffs":[[0,"on'\r\n});\r\n\r\n"],[1,"App.NavigationController = BaseArrayController.extend({\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact'\r\n            })\r\n        );\r\n    }        \r\n});\r\n\r\n"],[0,"App.Navigati"]],"start1":166,"start2":166,"length1":24,"length2":1095}]],"length":1825,"saved":false}
{"ts":1354816022717,"patch":[[{"diffs":[[0,"= Em"],[-1,"ber.Router.extend({\r\n  root: Ember.Route.extend({\r\n    index: Ember.Route.extend({\r\n      route: '/'\r\n    })\r\n"],[1,".Router.extend({\r\n    enableLogging: true,\r\n    location: 'hash',\r\n\r\n    root: Em.Route.extend({\r\n        \r\n        navigateTo: function (router, context){\r\n            // sets the document title with the route name, but you \r\n            // could have another property that keeps the title here\r\n            $(document).attr('title', context.context.get('routeName'));\r\n            // set the route name on the 'selected' property in the controller\r\n            router.set('navigationController.selected', context.context.get('routeName'));\r\n            // finaly transitions to the route that's provided by the model\r\n            router.transitionTo(context.context.get('routePath'), context.context);\r\n        },\r\n        navigateToResources: function (router, context) {\r\n            // since this is not called from a nav link which has a\r\n            // model, the selected and the route must be set manually\r\n            router.set('navigationController.selected','resources');\r\n            router.transitionTo('root.index.resources');\r\n        },\r\n        index: Em.Route.extend({\r\n            route: '/',\r\n            connectOutlets: function(router) {\r\n                router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n            },\r\n            home: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('applicationController').connectOutlet('home');\r\n                }\r\n            }),\r\n            resources: Em.Route.extend({\r\n                route: '/resources',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('resources');\r\n                }\r\n            }),\r\n            tutorials: Em.Route.extend({\r\n                route: '/tutorials',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('tutorials');\r\n                }\r\n            }),\r\n            contact: Em.Route.extend({\r\n                route: '/contact',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('contact');\r\n                }\r\n            })\r\n        })          \r\n  "],[0,"  })\r\n})"],[1,";"],[0,"\r\n\r\n"]],"start1":1682,"start2":1682,"length1":126,"length2":2343}]],"length":4042,"saved":false}
{"ts":1354816062197,"patch":[[{"diffs":[[0,"cation'\r\n});\r\n\r\n"],[1,"App.NavBarItem = Em.Object.extend({\r\n    displayText: '',\r\n    routePath: '',\r\n    routeName: '',\r\n    url: '#'\r\n});\r\n\r\n"],[0,"App.NavigationCo"]],"start1":162,"start2":162,"length1":32,"length2":152}]],"length":4162,"saved":false}
{"ts":1354816241760,"patch":[[{"diffs":[[0,"({\r\n    "],[1,"/*"],[0,"template"]],"start1":1405,"start2":1405,"length1":16,"length2":18},{"diffs":[[0,"av-bar',"],[1,"*/"],[0,"\r\n    se"]],"start1":1435,"start2":1435,"length1":16,"length2":18}]],"length":4166,"saved":false}
{"ts":1354816259911,"patch":[[{"diffs":[[0,"    "],[-1,"/*"],[0,"temp"]],"start1":1409,"start2":1409,"length1":10,"length2":8},{"diffs":[[0,"ar',"],[-1,"*/"],[0,"\r\n  "]],"start1":1437,"start2":1437,"length1":10,"length2":8}]],"length":4162,"saved":false}
{"ts":1354816410719,"patch":[[{"diffs":[[0,"   })\r\n});\r\n"],[-1,"\r\n"],[0,"App.Router ="]],"start1":1777,"start2":1777,"length1":26,"length2":24},{"diffs":[[0,"= Em"],[-1,".Router.extend({\r\n    enableLogging: true,\r\n    location: 'hash',\r\n\r\n    root: Em.Route.extend({\r\n        \r\n        navigateTo: function (router, context){\r\n            // sets the document title with the route name, but you \r\n            // could have another property that keeps the title here\r\n            $(document).attr('title', context.context.get('routeName'));\r\n            // set the route name on the 'selected' property in the controller\r\n            router.set('navigationController.selected', context.context.get('routeName'));\r\n            // finaly transitions to the route that's provided by the model\r\n            router.transitionTo(context.context.get('routePath'), context.context);\r\n        },\r\n        navigateToResources: function (router, context) {\r\n            // since this is not called from a nav link which has a\r\n            // model, the selected and the route must be set manually\r\n            router.set('navigationController.selected','resources');\r\n            router.transitionTo('root.index.resources');\r\n        },\r\n        index: Em.Route.extend({\r\n            route: '/',\r\n            connectOutlets: function(router) {\r\n                router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n            },\r\n            home: Em.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('applicationController').connectOutlet('home');\r\n                }\r\n            }),\r\n            resources: Em.Route.extend({\r\n                route: '/resources',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('resources');\r\n                }\r\n            }),\r\n            tutorials: Em.Route.extend({\r\n                route: '/tutorials',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('tutorials');\r\n                }\r\n            }),\r\n            contact: Em.Route.extend({\r\n                route: '/contact',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('contact');\r\n                }\r\n            })\r\n        })          \r\n  "],[1,"ber.Router.extend({\r\n  root: Ember.Route.extend({\r\n    index: Ember.Route.extend({\r\n      route: '/'\r\n    })\r\n"],[0,"  })\r\n})"],[-1,";"],[0,"\r\n\r\n"]],"start1":1800,"start2":1800,"length1":2343,"length2":126}]],"length":1943,"saved":false}
{"ts":1354816413208,"patch":[[{"diffs":[[0,"   })\r\n});\r\n"],[1,"\r\n"],[0,"App.Router ="]],"start1":1777,"start2":1777,"length1":24,"length2":26}]],"length":1945,"saved":false}
{"ts":1354816530687,"patch":[[{"diffs":[[0,"oller = "],[-1,"Base"],[1,"Em."],[0,"ArrayCon"]],"start1":317,"start2":317,"length1":20,"length2":19},{"diffs":[[0,"ller.extend("],[-1,"{"],[1,");"],[0,"\r\n    conten"]],"start1":339,"start2":339,"length1":25,"length2":26}]],"length":1945,"saved":false}
{"ts":1354816539988,"patch":[[{"diffs":[[0,"nView = "],[-1,"Base"],[1,"Em."],[0,"View.ext"]],"start1":1382,"start2":1382,"length1":20,"length2":19}]],"length":1944,"saved":false}
{"ts":1354816578807,"patch":[[{"diffs":[[0,".extend("],[-1,");"],[1,"{"],[0,"\r\n    co"]],"start1":343,"start2":343,"length1":18,"length2":17},{"diffs":[[0,"nView = "],[-1,"Em."],[1,"Base"],[0,"View.ext"]],"start1":1381,"start2":1381,"length1":19,"length2":20}]],"length":1944,"saved":false}
{"ts":1354816586323,"patch":[[{"diffs":[[0,"nView = "],[-1,"Base"],[1,"Em."],[0,"View.ext"]],"start1":1381,"start2":1381,"length1":20,"length2":19}]],"length":1943,"saved":false}
{"ts":1354816607740,"patch":[[{"diffs":[[0,"ew: "],[-1,"BaseView"],[1,"Em"],[0,".ext"]],"start1":1506,"start2":1506,"length1":16,"length2":10}]],"length":1937,"saved":false}
{"ts":1354816629208,"patch":[[{"diffs":[[0,"iew: Em."],[1,"View."],[0,"extend({"]],"start1":1505,"start2":1505,"length1":16,"length2":21}]],"length":1942,"saved":false}
{"ts":1354816696667,"patch":[[{"diffs":[[0,"ter = Em"],[-1,"ber"],[0,".Router."]],"start1":1795,"start2":1795,"length1":19,"length2":16},{"diffs":[[0,"\r\n  root: Em"],[-1,"ber"],[0,".Route.exten"]],"start1":1819,"start2":1819,"length1":27,"length2":24},{"diffs":[[0,"ndex: Em"],[-1,"ber"],[0,".Route.e"]],"start1":1853,"start2":1853,"length1":19,"length2":16}]],"length":1933,"saved":false}
{"ts":1354816747936,"patch":[[{"diffs":[[0,"tem = Em"],[1,"ber"],[0,".Object."]],"start1":189,"start2":189,"length1":16,"length2":19},{"diffs":[[0,"ler = Em"],[1,"ber"],[0,".ArrayCo"]],"start1":322,"start2":322,"length1":16,"length2":19},{"diffs":[[0,"iew = Em"],[1,"ber"],[0,".View.ex"]],"start1":1389,"start2":1389,"length1":16,"length2":19},{"diffs":[[0,"View: Em"],[1,"ber"],[0,".View.ex"]],"start1":1513,"start2":1513,"length1":16,"length2":19},{"diffs":[[0,"ter = Em"],[1,"ber"],[0,".Router."]],"start1":1807,"start2":1807,"length1":16,"length2":19}]],"length":1948,"saved":false}
{"ts":1354816760169,"patch":[[{"diffs":[[0,"\r\n  root: Em"],[1,"ber"],[0,".Route.exten"]],"start1":1834,"start2":1834,"length1":24,"length2":27},{"diffs":[[0,"ndex: Em"],[1,"ber"],[0,".Route.e"]],"start1":1871,"start2":1871,"length1":16,"length2":19}]],"length":1954,"saved":false}
{"ts":1354816809287,"patch":[[{"diffs":[[0,"bar'"],[-1,",\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: Ember.View.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    })"],[0,"\r\n})"]],"start1":1443,"start2":1443,"length1":352,"length2":8}]],"length":1610,"saved":false}
{"ts":1354816849170,"patch":[[{"diffs":[[0,"nav-bar'"],[1,",\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: Ember.View.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    })"],[0,"\r\n});\r\n\r"]],"start1":1439,"start2":1439,"length1":16,"length2":360}]],"length":1954,"saved":false}
{"ts":1354817183730,"patch":[[{"diffs":[[0,"end("],[-1,"{\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact'\r\n            })\r\n        );\r\n    }        \r\n}"],[0,");\r\n"]],"start1":353,"start2":353,"length1":1019,"length2":8}]],"length":943,"saved":false}
{"ts":1354817188829,"patch":[[{"diffs":[[0,"end("],[-1,"{\r\n    templateName: 'top-nav-bar',\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: Ember.View.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    })\r\n}"],[0,");\r\n"]],"start1":398,"start2":398,"length1":389,"length2":8}]],"length":562,"saved":false}
{"ts":1354817194772,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"App.NavBarItem = Ember.Object.extend({\r\n    displayText: '',\r\n    routePath: '',\r\n    routeName: '',\r\n    url: '#'\r\n});\r\n\r\n"],[0,"App."]],"start1":174,"start2":174,"length1":131,"length2":8}]],"length":439,"saved":false}
{"ts":1354817320718,"patch":[[{"diffs":[[0,"ber.View.extend("],[1,"{\r\n    templateName: 'top-nav-bar'\r\n}"],[0,");\r\n\r\nApp.Router"]],"start1":263,"start2":263,"length1":32,"length2":69}]],"length":476,"saved":false}
{"ts":1354817564928,"patch":[[{"diffs":[[0,"   index: Em"],[-1,"ber"],[0,".Route.exten"]],"start1":389,"start2":389,"length1":27,"length2":24},{"diffs":[[0,"\r\n      "],[1,"  "],[0,"route: '"]],"start1":416,"start2":416,"length1":16,"length2":18},{"diffs":[[0," '/'"],[-1,"\r\n    })"],[1,",\r\n        connectOutlets: function(router) {\r\n            router.get('applicationController').connectOutlet('navigation', 'navigation');\r\n        }\r\n    })          "],[0,"\r\n  "]],"start1":432,"start2":432,"length1":16,"length2":174}]],"length":633,"saved":false}
{"ts":1354817585934,"patch":[[{"diffs":[[0,"ndex: Em"],[1,"ber"],[0,".Route.e"]],"start1":393,"start2":393,"length1":16,"length2":19}]],"length":636,"saved":false}
{"ts":1354817644983,"patch":[[{"diffs":[[0,"ller.extend("],[1,"{\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact'\r\n            })\r\n        );\r\n    }        \r\n}"],[0,");\r\n\r\nApp.Na"]],"start1":222,"start2":222,"length1":24,"length2":1035}]],"length":1647,"saved":false}
{"ts":1354817668303,"patch":[[{"diffs":[[0,"cation'\r\n});\r\n\r\n"],[1,"App.NavBarItem = Em.Object.extend({\r\n    displayText: '',\r\n    routePath: '',\r\n    routeName: '',\r\n    url: '#'\r\n});\r\n\r\n"],[0,"App.NavigationCo"]],"start1":162,"start2":162,"length1":32,"length2":152}]],"length":1767,"saved":false}
{"ts":1354817679471,"patch":[[{"diffs":[[0,"tem = Em"],[1,"ber"],[0,".Object."]],"start1":189,"start2":189,"length1":16,"length2":19}]],"length":1770,"saved":false}
{"ts":1354817733334,"patch":[[{"diffs":[[0,"nav-bar'"],[1,",\r\n     selectedBinding: 'controller.selected'"],[0,"\r\n});\r\n\r"]],"start1":1439,"start2":1439,"length1":16,"length2":62}]],"length":1816,"saved":false}
{"ts":1354817743249,"patch":[[{"diffs":[[0,"end("],[-1,"{\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact'\r\n            })\r\n        );\r\n    }        \r\n}"],[0,");\r\n"]],"start1":353,"start2":353,"length1":1019,"length2":8}]],"length":805,"saved":false}
{"ts":1354817766642,"patch":[[{"diffs":[[0,"',\r\n    "],[-1," "],[0,"selected"]],"start1":435,"start2":435,"length1":17,"length2":16},{"diffs":[[0,"elected'"],[1,",\r\n    NavigationItemView: BaseView.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    }) "],[0,"\r\n});\r\n\r"]],"start1":473,"start2":473,"length1":16,"length2":314}]],"length":1102,"saved":false}
{"ts":1354817781501,"patch":[[{"diffs":[[0,"ew: "],[-1,"BaseView"],[1,"Ember"],[0,".ext"]],"start1":504,"start2":504,"length1":16,"length2":13}]],"length":1099,"saved":false}
{"ts":1354817823523,"patch":[[{"diffs":[[0,"ller.extend("],[1,"{\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact'\r\n            })\r\n        );\r\n    }        \r\n}"],[0,");\r\n\r\nApp.Na"]],"start1":345,"start2":345,"length1":24,"length2":1035}]],"length":2110,"saved":false}
{"ts":1354817832445,"patch":[[{"diffs":[[0,"end("],[-1,"{\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact'\r\n            })\r\n        );\r\n    }        \r\n}"],[0,");\r\n"]],"start1":353,"start2":353,"length1":1019,"length2":8}]],"length":1099,"saved":false}
{"ts":1354817902445,"patch":[[{"diffs":[[0,": Ember."],[1,"View."],[0,"extend({"]],"start1":506,"start2":506,"length1":16,"length2":21}]],"length":1104,"saved":false}
{"ts":1354817922465,"patch":[[{"diffs":[[0,"ller.extend("],[1,"{\r\n    content: [],\r\n    selected: null,\r\n    init: function() {\r\n        \r\n        this._super();\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Home',\r\n                routeName: 'home',\r\n                routePath: 'root.index.home'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Links/Resources',\r\n                routeName: 'resources',\r\n                routePath: 'root.index.resources'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Ember Tutorials',\r\n                routeName: 'tutorials',\r\n                routePath: 'root.index.tutorials'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.NavBarItem.create({\r\n                displayText: 'Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact'\r\n            })\r\n        );\r\n    }        \r\n}"],[0,");\r\n\r\nApp.Na"]],"start1":345,"start2":345,"length1":24,"length2":1035}]],"length":2115,"saved":false}
{"contributors":[],"silentsave":false,"ts":1355241880502,"patch":[[{"diffs":[[0,"t: '"],[-1,"Contact',\r\n                routeName: 'contact',\r\n                routePath: 'root.index.contact"],[1,"Grid',\r\n                routeName: 'grid',\r\n                routePath: 'root.index.grid'\r\n            })\r\n        );\r\n    }        \r\n});\r\n\r\nApp.HomeController = Ember.ArrayController.extend({\r\n    \r\n});\r\n\r\nApp.Resource = Ember.Object.extend({\r\n    htmlText: function() {\r\n        return new Handlebars.SafeString(this.get('text'));\r\n    }.property('text'),\r\n    text: '',\r\n    url: '', \r\n    target: '_blank',\r\n    description: '',\r\n    category: ''\r\n});\r\n\r\nApp.ResourcesController = Ember.ArrayController.extend({\r\n    content: [],\r\n    categories: ['All', 'Handlebars', 'Ember', 'Ember Data', 'Bootstrap', 'Other'],\r\n    categorySelected: 'All',\r\n    filtered: function() {\r\n        if(this.get('categorySelected') == \"All\") {\r\n            return this.get('content');                                        \r\n        } else {\r\n            return this.get(\"content\")\r\n                       .filterProperty(\r\n                           \"category\",\r\n                           this.get('categorySelected')\r\n                       );\r\n        }            \r\n    }.property('content.@each', 'categorySelected'),\r\n    filteredCount: function() {\r\n        return this.get('filtered').length;                                        \r\n    }.property('content.@each', 'categorySelected'),\r\n    hasItems: function() {\r\n        return this.get('filtered').length > 0;\r\n    }.property('filteredCount'), \r\n    init: function() {\r\n        this._super();\r\n\r\n        this.pushObject(\r\n            App.Resource.create({\r\n                text: 'StackOverflow with <em>ember.js</em> tag',\r\n                url: 'http://stackoverflow.com/questions/tagged/ember.js?sort=votes',\r\n                description: 'Takes you to a list of general questions/answers about Ember.js',\r\n                category: 'Ember'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.Resource.create({\r\n                text: 'StackOverflow with <em>ember-data</em> tag',\r\n                url: 'http://stackoverflow.com/questions/tagged/ember-data?sort=votes',\r\n                description: 'Takes you to a list of questions/answers about Ember Data',\r\n                category: 'Ember Data'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.Resource.create({\r\n                text: 'Getting Started With EmberJS',\r\n                url: 'http://andymatthews.net/read/2012/03/07/Getting-Started-With-EmberJS',\r\n                description: 'Introductory article about Ember.js by Andy Matthews',\r\n                category: 'Ember'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.Resource.create({\r\n                text: 'Flame on! A beginner\\'s guide to Ember.js',\r\n                url: 'http://www.adobe.com/devnet/html5/articles/flame-on-a-beginners-guide-to-emberjs.html',\r\n                description: 'Introductory article about Ember.js by Andy Matthews touching several beginner subjects',\r\n                category: 'Ember'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.Resource.create({\r\n                text: 'Video: Tom Dale speaking on PragueJS',\r\n                url: 'http://www.youtube.com/watch?v=djhAsWGOImk',\r\n                description: 'Video: Tom Dale speaking on PragueJS',\r\n                category: 'Ember Data'\r\n            })\r\n        );\r\n        this.pushObject(\r\n            App.Resource.create({\r\n                text: 'JavaScript Templating with Handlebars',\r\n                url: 'http://javascriptplayground.com/blog/2012/05/javascript-templating-handlebars-tutorial',\r\n                description: 'JavaScript Templating with Handlebars',\r\n                category: 'Handlebars'\r\n            })    \r\n        );\r\n        this.pushObject(\r\n            App.Resource.create({\r\n                text: 'Ember/Handlebars template precompilation with Play',\r\n                url: 'http://eng.netwallet.com/2012/04/25/emberhandlebars-template-precompilation-with-play/',\r\n                description: 'Ember/Handlebars template precompilation with Play',\r\n                category: 'Handlebars"],[0,"'\r\n "]],"start1":1221,"start2":1221,"length1":104,"length2":4070},{"diffs":[[0,"\r\n            })"],[1,"    "],[0,"\r\n        );\r\n  "]],"start1":5288,"start2":5288,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"}        \r\n});\r\n\r\nApp.NavigationView = Ember.View.extend({\r\n    templateName: 'top-nav-bar',\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: Ember.View.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    }) \r\n});\r\n\r\nApp.Router = Ember.Router.extend({\r\n  root: Ember.Route.extend({\r\n"],[1,"    this.pushObject(\r\n            App.Resource.create({\r\n                text: 'Game On: Backbone and Ember',\r\n                url: 'http://net.tutsplus.com/tutorials/javascript-ajax/game-on-backbone-and-ember/',\r\n                description: 'Game On: Backbone and Ember',\r\n                category: 'Other'\r\n            })    \r\n        );\r\nthis.pushObject(\r\n            App.Resource.create({\r\n                text: 'List of running Ember-Bootstrap controls and code',\r\n                url: 'http://jzajpt.github.com/ember-bootstrap/',\r\n                description: 'List of running Ember-Bootstrap controls and code',\r\n                category: 'Bootstrap'\r\n            })    \r\n        );\r\n\r\n    }\r\n});    \r\nApp.HomeView = Ember.View.extend({\r\n    templateName: 'home-view',\r\n    watchVideo: function(e) {\r\n        Bootstrap.ModalPane.popup({\r\n            heading: \"YouTube Video\",\r\n            message: '<div>Will the real Mitt Romney please stand up?</div><div><iframe width=\"530\" height=\"315\" src=\"http://www.youtube.com/embed/bxch-yi14BE\" frameborder=\"0\" allowfullscreen></iframe></div></div>',\r\n            primary: \"OK\",\r\n            secondary: \"Cancel\",\r\n            showBackdrop: true,\r\n            callback: function (opts, event) {\r\n            }\r\n        });        \r\n    }\r\n});\r\n\r\nApp.TutorialsController = Ember.ArrayController.extend({\r\n     \r\n});\r\n\r\nApp.TutorialsView = Ember.View.extend({\r\n    templateName: 'tutorials-view'\r\n});\r\n\r\nApp.NavigationView = Ember.View.extend({\r\n    templateName: 'top-nav-bar',\r\n    selectedBinding: 'controller.selected',\r\n    NavigationItemView: Ember.View.extend({\r\n        tagName: 'li',\r\n        classNameBindings: 'isActive:active'.w(),\r\n        isActive: function() {\r\n            return this.get('menu') === this.get('parentView.selected');\r\n        }.property('item', 'parentView.selected').cacheable(),\r\n    }) \r\n});\r\n\r\nApp.ResourcesView = Ember.View.extend({\r\n    templateName: 'resources-view'\r\n});\r\n\r\n\r\nApp.GridController = Ember.ArrayController.extend({\r\n   \r\n});\r\n\r\nApp.Person = Ember.Object.extend();\r\n\r\nApp.personListController = Ember.ArrayProxy.create({\r\n    content: [\r\n        App.Person.create({firstName:'Oliver', lastName:'Smith'}),\r\n        App.Person.create({firstName:'Thomas', lastName:'Smith'}),\r\n        App.Person.create({firstName:'Harry', lastName:'McIntosh'}),\r\n        App.Person.create({firstName:'Joshua', lastName:'Doe'}),\r\n        App.Person.create({firstName:'Alfie', lastName:'Smith'}),\r\n        App.Person.create({firstName:'Charlie', lastName:'Smith'}),\r\n        App.Person.create({firstName:'Daniel', lastName:'Smith'}),\r\n        App.Person.create({firstName:'James', lastName:'Smith'}),\r\n        App.Person.create({firstName:'William', lastName:'Doe'})\r\n    ]\r\n});\r\n\r\nApp.GridView = Ember.View.extend({\r\n    templateName: 'grid-view'\r\n});\r\n\r\n/*\r\nApp.testTable = Flame.ArrayTableController.create({\r\n    contentBinding: 'App.personListController.content',\r\n    columns: [\r\n        {label: 'First name', property: 'firstName'},\r\n        {label: 'Last name', property: 'lastName'}\r\n    ],\r\n    headerProperty: 'firstName'\r\n});\r\n\r\nApp.GridView = Flame.GridView.extend({\r\n    templateName: 'grid-view',\r\n    childViews: ['tableView'],\r\n\r\n    tableView: Flame.TableView.extend({\r\n        contentBinding: 'App.testTable'\r\n    })\r\n});\r\n*/\r\nApp.Router = Ember.Router.extend({\r\n    enableLogging: true,\r\n    location: 'hash',\r\n    root: Ember.Route.extend({\r\n        navigateTo: function (router, context){\r\n            // sets the document title with the route name, but you \r\n            // could have another property that keeps the title here\r\n            $(document).attr('title', context.context.get('routeName'));\r\n            // set the route name on the 'selected' property in the controller\r\n            router.set('navigationController.selected', context.context.get('routeName'));\r\n            // finaly transitions to the route that's provided by the model\r\n            router.transitionTo(context.context.get('routePath'), context.context);\r\n        },\r\n        navigateToResources: function (router, context) {\r\n            // since this is not called from a nav link which has a\r\n            // model, the selected and the route must be set manually\r\n            router.set('navigationController.selected','resources');\r\n            router.transitionTo('root.index.resources');\r\n        },\r\n    "],[0,"    "]],"start1":5322,"start2":5322,"length1":519,"length2":4402},{"diffs":[[0,"({\r\n        "],[1,"  "],[1,"  "],[0,"route: '/',\r"]],"start1":9749,"start2":9749,"length1":24,"length2":28},{"diffs":[[0,"oute: '/',\r\n"],[1,"    "],[0,"        conn"]],"start1":9766,"start2":9766,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"router.get('"]],"start1":9826,"start2":9826,"length1":24,"length2":28},{"diffs":[[0,"    "],[-1,"}\r\n    })          \r\n"],[1,"    },\r\n            home: Ember.Route.extend({\r\n                route: '/',\r\n                connectOutlets: function (router, context) {\r\n                     router.get('applicationController').connectOutlet('home');\r\n                }\r\n            }),\r\n            resources: Ember.Route.extend({\r\n                route: '/resources',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('resources');\r\n                }\r\n            }),\r\n            tutorials: Ember.Route.extend({\r\n                route: '/tutorials',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('tutorials');\r\n                }\r\n            }),\r\n            grid: Ember.Route.extend({\r\n                route: '/grid',\r\n                connectOutlets: function (router, context) {\r\n                    router.get('applicationController').connectOutlet('grid');\r\n                }\r\n            })\r\n        })          \r\n  "],[0,"  })"]],"start1":9926,"start2":9926,"length1":29,"length2":1070}]],"length":11021,"saved":false}
{"contributors":[],"silentsave":false,"ts":1355243015441,"patch":[[{"diffs":[[0,"reate();\r\n\r\n"],[1,"\r\n"],[0,"App.Applicat"]],"start1":29,"start2":29,"length1":24,"length2":26}]],"length":11023,"saved":false}
{"ts":1355243065659,"patch":[[{"diffs":[[0,".create("],[1,"{    \r\n    title: 'Manos de estiba'\r\n}"],[0,");"],[-1,"\r\n"],[0,"\r\n\r\nApp."]],"start1":27,"start2":27,"length1":20,"length2":56}]],"length":11059,"saved":false}
